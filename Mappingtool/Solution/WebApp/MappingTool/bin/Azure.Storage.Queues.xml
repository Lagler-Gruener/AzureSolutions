<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Azure.Storage.Queues</name>
    </assembly>
    <members>
        <member name="T:Azure.Storage.Queues.QueueRestClient">
            <summary>
            Azure Queue Storage
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.QueueRestClient.Service">
            <summary>
            Service operations for Azure Queue Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.SetPropertiesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Queues.Models.QueueServiceProperties,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Sets properties for a storage account's Queue service endpoint, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="properties">The StorageService properties.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.SetPropertiesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Queues.Models.QueueServiceProperties,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.SetPropertiesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="properties">The StorageService properties.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.SetPropertiesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.SetPropertiesAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Service.SetPropertiesAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Service.SetPropertiesAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.GetPropertiesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            gets the properties of a storage account's Queue service, including properties for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Storage Service Properties.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.GetPropertiesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.GetPropertiesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.GetPropertiesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.GetPropertiesAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Service.GetPropertiesAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Service.GetPropertiesAsync Azure.Response{Azure.Storage.Queues.Models.QueueServiceProperties}.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.GetStatisticsAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves statistics related to replication for the Queue service. It is only available on the secondary location endpoint when read-access geo-redundant replication is enabled for the storage account.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Statistics for the storage service.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.GetStatisticsAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.GetStatisticsAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.GetStatisticsAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.GetStatisticsAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Service.GetStatisticsAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Service.GetStatisticsAsync Azure.Response{Azure.Storage.Queues.Models.QueueServiceStatistics}.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.ListQueuesSegmentAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.ListQueuesIncludeType},System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The List Queues Segment operation returns a list of the queues under the specified account
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="prefix">Filters the results to return only queues whose name begins with the specified prefix.</param>
            <param name="marker">A string value that identifies the portion of the list of queues to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all queues remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.</param>
            <param name="maxresults">Specifies the maximum number of queues to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000.</param>
            <param name="include">Include this parameter to specify that the queues's metadata be returned as part of the response body.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The object returned when calling List Queues on a Queue Service.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.ListQueuesSegmentAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.String,System.Nullable{System.Int32},System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.ListQueuesIncludeType},System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Service.ListQueuesSegmentAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="prefix">Filters the results to return only queues whose name begins with the specified prefix.</param>
            <param name="marker">A string value that identifies the portion of the list of queues to be returned with the next listing operation. The operation returns the NextMarker value within the response body if the listing operation did not return all queues remaining to be listed with the current page. The NextMarker value can be used as the value for the marker parameter in a subsequent call to request the next page of list items. The marker value is opaque to the client.</param>
            <param name="maxresults">Specifies the maximum number of queues to return. If the request does not specify maxresults, or specifies a value greater than 5000, the server will return up to 5000 items. Note that if the listing operation crosses a partition boundary, then the service will return a continuation token for retrieving the remainder of the results. For this reason, it is possible that the service will return fewer results than specified by maxresults, or than the default of 5000.</param>
            <param name="include">Include this parameter to specify that the queues's metadata be returned as part of the response body.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Service.ListQueuesSegmentAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Service.ListQueuesSegmentAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Service.ListQueuesSegmentAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Service.ListQueuesSegmentAsync Azure.Response{Azure.Storage.Queues.Models.QueuesSegment}.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.QueueRestClient.Queue">
            <summary>
            Queue operations for Azure Queue Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.CreateAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            creates a new queue under the given account.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="metadata">Optional. Include this parameter to specify that the queue's metadata be returned as part of the response body. Note that metadata requested with this parameter must be stored in accordance with the naming restrictions imposed by the 2009-09-19 version of the Queue service. Beginning with this version, all metadata names must adhere to the naming conventions for C# identifiers.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.CreateAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Create the Queue.CreateAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="metadata">Optional. Include this parameter to specify that the queue's metadata be returned as part of the response body. Note that metadata requested with this parameter must be stored in accordance with the naming restrictions imposed by the 2009-09-19 version of the Queue service. Beginning with this version, all metadata names must adhere to the naming conventions for C# identifiers.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Queue.CreateAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.CreateAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Queue.CreateAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Queue.CreateAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.DeleteAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            operation permanently deletes the specified queue
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.DeleteAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Queue.DeleteAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Queue.DeleteAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.DeleteAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Queue.DeleteAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Queue.DeleteAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.GetPropertiesAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            Retrieves user-defined metadata and queue properties on the specified queue. Metadata is associated with the queue as name-values pairs.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Queues.Models.QueueProperties}</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.GetPropertiesAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Queue.GetPropertiesAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Queue.GetPropertiesAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.GetPropertiesAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Queue.GetPropertiesAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Queue.GetPropertiesAsync Azure.Response{Azure.Storage.Queues.Models.QueueProperties}.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.SetMetadataAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="metadata">Optional. Include this parameter to specify that the queue's metadata be returned as part of the response body. Note that metadata requested with this parameter must be stored in accordance with the naming restrictions imposed by the 2009-09-19 version of the Queue service. Beginning with this version, all metadata names must adhere to the naming conventions for C# identifiers.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.SetMetadataAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Create the Queue.SetMetadataAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="metadata">Optional. Include this parameter to specify that the queue's metadata be returned as part of the response body. Note that metadata requested with this parameter must be stored in accordance with the naming restrictions imposed by the 2009-09-19 version of the Queue service. Beginning with this version, all metadata names must adhere to the naming conventions for C# identifiers.</param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Queue.SetMetadataAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.SetMetadataAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Queue.SetMetadataAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Queue.SetMetadataAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.GetAccessPolicyAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            returns details about any stored access policies specified on the queue that may be used with Shared Access Signatures.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>a collection of signed identifiers</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.GetAccessPolicyAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Queue.GetAccessPolicyAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Queue.GetAccessPolicyAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.GetAccessPolicyAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Queue.GetAccessPolicyAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Queue.GetAccessPolicyAsync Azure.Response{System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier}}.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.SetAccessPolicyAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            sets stored access policies for the queue that may be used with Shared Access Signatures
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="permissions">the acls for the queue</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.SetAccessPolicyAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Queue.SetAccessPolicyAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="permissions">the acls for the queue</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Queue.SetAccessPolicyAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Queue.SetAccessPolicyAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Queue.SetAccessPolicyAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Queue.SetAccessPolicyAsync Azure.Response.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.QueueRestClient.Messages">
            <summary>
            Messages operations for Azure Queue Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.DequeueAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Dequeue operation retrieves one or more messages from the front of the queue.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="numberOfMessages">Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.</param>
            <param name="visibilitytimeout">Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The object returned when calling Get Messages on a Queue</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.DequeueAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Messages.DequeueAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="numberOfMessages">Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.</param>
            <param name="visibilitytimeout">Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Messages.DequeueAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.DequeueAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Messages.DequeueAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Messages.DequeueAsync Azure.Response{System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.DequeuedMessageItem}}.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.ClearAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Clear operation deletes all messages from the specified queue.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.ClearAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Messages.ClearAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Messages.ClearAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.ClearAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Messages.ClearAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Messages.ClearAsync Azure.Response.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.EnqueueAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Queues.Models.QueueSendMessage,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Enqueue operation adds a new message to the back of the message queue. A visibility timeout can also be specified to make the message invisible until the visibility timeout expires. A message must be in a format that can be included in an XML request with UTF-8 encoding. The encoded message can be up to 64 KB in size for versions 2011-08-18 and newer, or 8 KB in size for previous versions.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="message">A Message object which can be stored in a Queue</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="visibilitytimeout">Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time.</param>
            <param name="messageTimeToLive">Optional. Specifies the time-to-live interval for the message, in seconds. Prior to version 2017-07-29, the maximum time-to-live allowed is 7 days. For version 2017-07-29 or later, the maximum time-to-live can be any positive number, as well as -1 indicating that the message does not expire. If this parameter is omitted, the default time-to-live is 7 days.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The object returned when calling Put Message on a Queue</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.EnqueueAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,Azure.Storage.Queues.Models.QueueSendMessage,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Messages.EnqueueAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="message">A Message object which can be stored in a Queue</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="visibilitytimeout">Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time.</param>
            <param name="messageTimeToLive">Optional. Specifies the time-to-live interval for the message, in seconds. Prior to version 2017-07-29, the maximum time-to-live allowed is 7 days. For version 2017-07-29 or later, the maximum time-to-live can be any positive number, as well as -1 indicating that the message does not expire. If this parameter is omitted, the default time-to-live is 7 days.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Messages.EnqueueAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.EnqueueAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Messages.EnqueueAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Messages.EnqueueAsync Azure.Response{System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.SendReceipt}}.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.PeekAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Peek operation retrieves one or more messages from the front of the queue, but does not alter the visibility of the message.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="numberOfMessages">Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The object returned when calling Peek Messages on a Queue</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.PeekAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Create the Messages.PeekAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="numberOfMessages">Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32. If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The Messages.PeekAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.Messages.PeekAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the Messages.PeekAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The Messages.PeekAsync Azure.Response{System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.PeekedMessageItem}}.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.QueueRestClient.MessageId">
            <summary>
            MessageId operations for Azure Queue Storage
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.MessageId.UpdateAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Int32,System.String,Azure.Storage.Queues.Models.QueueSendMessage,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Update operation was introduced with version 2011-08-18 of the Queue service API. The Update Message operation updates the visibility timeout of a message. You can also use this operation to update the contents of a message. A message must be in a format that can be included in an XML request with UTF-8 encoding, and the encoded message can be up to 64KB in size.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="popReceipt">Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.</param>
            <param name="visibilitytimeout">Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="message">A Message object which can be stored in a Queue</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response{Azure.Storage.Queues.Models.UpdateReceipt}</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.MessageId.UpdateAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.Int32,System.String,Azure.Storage.Queues.Models.QueueSendMessage,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the MessageId.UpdateAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="popReceipt">Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.</param>
            <param name="visibilitytimeout">Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds. A specified value must be larger than or equal to 1 second, and cannot be larger than 7 days, or larger than 2 hours on REST protocol versions prior to version 2011-08-18. The visibility timeout of a message can be set to a value later than the expiry time.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="message">A Message object which can be stored in a Queue</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The MessageId.UpdateAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.MessageId.UpdateAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the MessageId.UpdateAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The MessageId.UpdateAsync Azure.Response{Azure.Storage.Queues.Models.UpdateReceipt}.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.MessageId.DeleteAsync(Azure.Core.Pipeline.ClientDiagnostics,Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.String,System.Boolean,System.String,System.Threading.CancellationToken)">
            <summary>
            The Delete operation deletes the specified message.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance used for operation reporting.</param>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="popReceipt">Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <param name="async">Whether to invoke the operation asynchronously.  The default value is true.</param>
            <param name="operationName">Operation name.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>Azure.Response</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.MessageId.DeleteAsync_CreateMessage(Azure.Core.Pipeline.HttpPipeline,System.Uri,System.String,System.String,System.Nullable{System.Int32},System.String)">
            <summary>
            Create the MessageId.DeleteAsync request.
            </summary>
            <param name="pipeline">The pipeline used for sending requests.</param>
            <param name="resourceUri">The URL of the service account, queue or message that is the targe of the desired operation.</param>
            <param name="popReceipt">Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.</param>
            <param name="version">Specifies the version of the operation to use for this request.</param>
            <param name="timeout">The The timeout parameter is expressed in seconds. For more information, see <a href="https://docs.microsoft.com/rest/api/storageservices/setting-timeouts-for-queue-service-operations">Setting Timeouts for Queue Service Operations.</a></param>
            <param name="requestId">Provides a client-generated, opaque value with a 1 KB character limit that is recorded in the analytics logs when storage analytics logging is enabled.</param>
            <returns>The MessageId.DeleteAsync Message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueRestClient.MessageId.DeleteAsync_CreateResponse(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create the MessageId.DeleteAsync response or throw a failure exception.
            </summary>
            <param name="clientDiagnostics">The ClientDiagnostics instance to use.</param>
            <param name="response">The raw Response.</param>
            <returns>The MessageId.DeleteAsync Azure.Response.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.DequeuedMessageItem">
            <summary>
            The object returned in the QueueMessageList array when calling Get Messages on a Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.DequeuedMessageItem.MessageId">
            <summary>
            The Id of the Message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.DequeuedMessageItem.InsertionTime">
            <summary>
            The time the Message was inserted into the Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.DequeuedMessageItem.ExpirationTime">
            <summary>
            The time that the Message will expire and be automatically deleted.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.DequeuedMessageItem.PopReceipt">
            <summary>
            This value is required to delete the Message. If deletion fails using this popreceipt then the message has been dequeued by another client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.DequeuedMessageItem.TimeNextVisible">
            <summary>
            The time that the message will again become visible in the Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.DequeuedMessageItem.DequeueCount">
            <summary>
            The number of times the message has been dequeued.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.DequeuedMessageItem.MessageText">
            <summary>
            The content of the Message.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.DequeuedMessageItem.#ctor">
            <summary>
            Prevent direct instantiation of DequeuedMessageItem instances.
            You can use QueuesModelFactory.DequeuedMessageItem instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.DequeuedMessageItem.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new DequeuedMessageItem instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized DequeuedMessageItem instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.ListQueuesIncludeType">
            <summary>
            ListQueuesIncludeType values
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.Models.ListQueuesIncludeType.Metadata">
            <summary>
            metadata
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.Models.PeekedMessageItem">
            <summary>
            The object returned in the QueueMessageList array when calling Peek Messages on a Queue
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessageItem.MessageId">
            <summary>
            The Id of the Message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessageItem.InsertionTime">
            <summary>
            The time the Message was inserted into the Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessageItem.ExpirationTime">
            <summary>
            The time that the Message will expire and be automatically deleted.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessageItem.DequeueCount">
            <summary>
            The number of times the message has been dequeued.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessageItem.MessageText">
            <summary>
            The content of the Message.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.PeekedMessageItem.#ctor">
            <summary>
            Prevent direct instantiation of PeekedMessageItem instances.
            You can use QueuesModelFactory.PeekedMessageItem instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.PeekedMessageItem.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new PeekedMessageItem instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized PeekedMessageItem instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueAccessPolicy">
            <summary>
            An Access policy
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueAccessPolicy.StartsOn">
            <summary>
            the date-time the policy is active
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueAccessPolicy.ExpiresOn">
            <summary>
            the date-time the policy expires
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueAccessPolicy.Permissions">
            <summary>
            the permissions for the acl policy
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueAccessPolicy.#ctor">
            <summary>
            Creates a new QueueAccessPolicy instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueAccessPolicy.ToXml(Azure.Storage.Queues.Models.QueueAccessPolicy,System.String,System.String)">
            <summary>
            Serialize a QueueAccessPolicy instance as XML.
            </summary>
            <param name="value">The QueueAccessPolicy instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "AccessPolicy".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueAccessPolicy.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueAccessPolicy instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueAccessPolicy instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueAnalyticsLogging">
            <summary>
            Azure Analytics Logging settings.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Version">
            <summary>
            The version of Storage Analytics to configure.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Delete">
            <summary>
            Indicates whether all delete requests should be logged.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Read">
            <summary>
            Indicates whether all read requests should be logged.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.Write">
            <summary>
            Indicates whether all write requests should be logged.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueAnalyticsLogging.RetentionPolicy">
            <summary>
            the retention policy
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueAnalyticsLogging.#ctor">
            <summary>
            Creates a new QueueAnalyticsLogging instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueAnalyticsLogging.#ctor(System.Boolean)">
            <summary>
            Creates a new QueueAnalyticsLogging instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueAnalyticsLogging.ToXml(Azure.Storage.Queues.Models.QueueAnalyticsLogging,System.String,System.String)">
            <summary>
            Serialize a QueueAnalyticsLogging instance as XML.
            </summary>
            <param name="value">The QueueAnalyticsLogging instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "Logging".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueAnalyticsLogging.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueAnalyticsLogging instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueAnalyticsLogging instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueCorsRule">
            <summary>
            CORS is an HTTP feature that enables a web application running under one domain to access resources in another domain. Web browsers implement a security restriction known as same-origin policy that prevents a web page from calling APIs in a different domain; CORS provides a secure way to allow one domain (the origin domain) to call APIs in another domain
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueCorsRule.AllowedOrigins">
            <summary>
            The origin domains that are permitted to make a request against the storage service via CORS. The origin domain is the domain from which the request originates. Note that the origin must be an exact case-sensitive match with the origin that the user age sends to the service. You can also use the wildcard character '*' to allow all origin domains to make requests via CORS.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueCorsRule.AllowedMethods">
            <summary>
            The methods (HTTP request verbs) that the origin domain may use for a CORS request. (comma separated)
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueCorsRule.AllowedHeaders">
            <summary>
            the request headers that the origin domain may specify on the CORS request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueCorsRule.ExposedHeaders">
            <summary>
            The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueCorsRule.MaxAgeInSeconds">
            <summary>
            The maximum amount time that a browser should cache the preflight OPTIONS request.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueCorsRule.#ctor">
            <summary>
            Creates a new QueueCorsRule instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueCorsRule.ToXml(Azure.Storage.Queues.Models.QueueCorsRule,System.String,System.String)">
            <summary>
            Serialize a QueueCorsRule instance as XML.
            </summary>
            <param name="value">The QueueCorsRule instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "CorsRule".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueCorsRule.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueCorsRule instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueCorsRule instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueErrorCode">
            <summary>
            Error codes returned by the service
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.Models.QueueErrorCode._value">
            <summary>
            The QueueErrorCode value.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueErrorCode.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> structure.
            </summary>
            <param name="value">The string value of the instance.</param>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AccountAlreadyExists">
            <summary>
            AccountAlreadyExists
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AccountBeingCreated">
            <summary>
            AccountBeingCreated
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AccountIsDisabled">
            <summary>
            AccountIsDisabled
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthenticationFailed">
            <summary>
            AuthenticationFailed
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationFailure">
            <summary>
            AuthorizationFailure
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.ConditionHeadersNotSupported">
            <summary>
            ConditionHeadersNotSupported
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.ConditionNotMet">
            <summary>
            ConditionNotMet
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.EmptyMetadataKey">
            <summary>
            EmptyMetadataKey
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InsufficientAccountPermissions">
            <summary>
            InsufficientAccountPermissions
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InternalError">
            <summary>
            InternalError
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidAuthenticationInfo">
            <summary>
            InvalidAuthenticationInfo
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidHeaderValue">
            <summary>
            InvalidHeaderValue
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidHttpVerb">
            <summary>
            InvalidHttpVerb
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidInput">
            <summary>
            InvalidInput
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidMd5">
            <summary>
            InvalidMd5
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidMetadata">
            <summary>
            InvalidMetadata
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidQueryParameterValue">
            <summary>
            InvalidQueryParameterValue
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidRange">
            <summary>
            InvalidRange
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidResourceName">
            <summary>
            InvalidResourceName
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidUri">
            <summary>
            InvalidUri
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidXmlDocument">
            <summary>
            InvalidXmlDocument
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidXmlNodeValue">
            <summary>
            InvalidXmlNodeValue
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.Md5Mismatch">
            <summary>
            Md5Mismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.MetadataTooLarge">
            <summary>
            MetadataTooLarge
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingContentLengthHeader">
            <summary>
            MissingContentLengthHeader
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingRequiredQueryParameter">
            <summary>
            MissingRequiredQueryParameter
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingRequiredHeader">
            <summary>
            MissingRequiredHeader
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.MissingRequiredXmlNode">
            <summary>
            MissingRequiredXmlNode
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.MultipleConditionHeadersNotSupported">
            <summary>
            MultipleConditionHeadersNotSupported
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.OperationTimedOut">
            <summary>
            OperationTimedOut
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.OutOfRangeInput">
            <summary>
            OutOfRangeInput
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.OutOfRangeQueryParameterValue">
            <summary>
            OutOfRangeQueryParameterValue
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.RequestBodyTooLarge">
            <summary>
            RequestBodyTooLarge
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.ResourceTypeMismatch">
            <summary>
            ResourceTypeMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.RequestUrlFailedToParse">
            <summary>
            RequestUrlFailedToParse
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.ResourceAlreadyExists">
            <summary>
            ResourceAlreadyExists
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.ResourceNotFound">
            <summary>
            ResourceNotFound
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.ServerBusy">
            <summary>
            ServerBusy
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedHeader">
            <summary>
            UnsupportedHeader
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedXmlNode">
            <summary>
            UnsupportedXmlNode
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedQueryParameter">
            <summary>
            UnsupportedQueryParameter
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.UnsupportedHttpVerb">
            <summary>
            UnsupportedHttpVerb
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.InvalidMarker">
            <summary>
            InvalidMarker
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.MessageNotFound">
            <summary>
            MessageNotFound
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.MessageTooLarge">
            <summary>
            MessageTooLarge
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.PopReceiptMismatch">
            <summary>
            PopReceiptMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueAlreadyExists">
            <summary>
            QueueAlreadyExists
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueBeingDeleted">
            <summary>
            QueueBeingDeleted
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueDisabled">
            <summary>
            QueueDisabled
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueNotEmpty">
            <summary>
            QueueNotEmpty
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.QueueNotFound">
            <summary>
            QueueNotFound
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationSourceIPMismatch">
            <summary>
            AuthorizationSourceIPMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationProtocolMismatch">
            <summary>
            AuthorizationProtocolMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationPermissionMismatch">
            <summary>
            AuthorizationPermissionMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationServiceMismatch">
            <summary>
            AuthorizationServiceMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.AuthorizationResourceTypeMismatch">
            <summary>
            AuthorizationResourceTypeMismatch
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueErrorCode.FeatureVersionMismatch">
            <summary>
            FeatureVersionMismatch
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueErrorCode.op_Equality(Azure.Storage.Queues.Models.QueueErrorCode,Azure.Storage.Queues.Models.QueueErrorCode)">
            <summary>
            Determines if two <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> values are the same.
            </summary>
            <param name="left">The first <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> to compare.</param>
            <returns>True if <paramref name="left"/> and <paramref name="right"/> are the same; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueErrorCode.op_Inequality(Azure.Storage.Queues.Models.QueueErrorCode,Azure.Storage.Queues.Models.QueueErrorCode)">
            <summary>
            Determines if two <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> values are different.
            </summary>
            <param name="left">The first <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> to compare.</param>
            <returns>True if <paramref name="left"/> and <paramref name="right"/> are different; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueErrorCode.op_Implicit(System.String)~Azure.Storage.Queues.Models.QueueErrorCode">
            <summary>
            Converts a string to a <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/>.
            </summary>
            <param name="value">The string value to convert.</param>
            <returns>The QueueErrorCode value.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueErrorCode.Equals(System.Object)">
            <summary>
            Check if two <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueErrorCode.Equals(Azure.Storage.Queues.Models.QueueErrorCode)">
            <summary>
            Check if two <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> instances are equal.
            </summary>
            <param name="other">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueErrorCode.GetHashCode">
            <summary>
            Get a hash code for the <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/>.
            </summary>
            <returns>Hash code for the QueueErrorCode.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueErrorCode.ToString">
            <summary>
            Convert the <see cref="T:Azure.Storage.Queues.Models.QueueErrorCode"/> to a string.
            </summary>
            <returns>String representation of the QueueErrorCode.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueGeoReplication">
            <summary>
            QueueGeoReplication
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueGeoReplication.Status">
            <summary>
            The status of the secondary location
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueGeoReplication.LastSyncedOn">
            <summary>
            A GMT date/time value, to the second. All primary writes preceding this value are guaranteed to be available for read operations at the secondary. Primary writes after this point in time may or may not be available for reads.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueGeoReplication.#ctor">
            <summary>
            Prevent direct instantiation of QueueGeoReplication instances.
            You can use QueuesModelFactory.QueueGeoReplication instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueGeoReplication.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueGeoReplication instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueGeoReplication instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueuesModelFactory">
            <summary>
            QueuesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            QueuesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            QueuesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            QueuesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            QueuesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            QueuesModelFactory provides utilities for mocking.
            </summary>
            <summary>
            QueuesModelFactory provides utilities for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueGeoReplication(Azure.Storage.Queues.Models.QueueGeoReplicationStatus,System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates a new QueueGeoReplication instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueItem(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates a new QueueItem instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueProperties(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
            <summary>
            Creates a new QueueProperties instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueServiceStatistics(Azure.Storage.Queues.Models.QueueGeoReplication)">
            <summary>
            Creates a new QueueServiceStatistics instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.SendReceipt(System.String,System.DateTimeOffset,System.DateTimeOffset,System.String,System.DateTimeOffset)">
            <summary>
            Creates a new SendReceipt instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.UpdateReceipt(System.String,System.DateTimeOffset)">
            <summary>
            Creates a new UpdateReceipt instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueMessage(System.String,System.String,System.String,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates a new QueueMessage instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.QueueMessage(System.String,System.String,System.BinaryData,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates a new QueueMessage instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.PeekedMessage(System.String,System.String,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates a new PeekedMessage instance for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesModelFactory.PeekedMessage(System.String,System.BinaryData,System.Int64,System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            Creates a new PeekedMessage instance for mocking.
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueGeoReplicationStatus">
            <summary>
            The status of the secondary location
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.Models.QueueGeoReplicationStatus.Live">
            <summary>
            live
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.Models.QueueGeoReplicationStatus.Bootstrap">
            <summary>
            bootstrap
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.Models.QueueGeoReplicationStatus.Unavailable">
            <summary>
            unavailable
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueItem">
            <summary>
            An Azure Storage Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueItem.Name">
            <summary>
            The name of the Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueItem.Metadata">
            <summary>
            Metadata
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueItem.#ctor">
            <summary>
            Creates a new QueueItem instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueItem.#ctor(System.Boolean)">
            <summary>
            Creates a new QueueItem instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueItem.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueItem instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueItem instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueMetrics">
            <summary>
            QueueMetrics
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMetrics.Version">
            <summary>
            The version of Storage Analytics to configure.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMetrics.Enabled">
            <summary>
            Indicates whether metrics are enabled for the Queue service.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMetrics.RetentionPolicy">
            <summary>
            the retention policy
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMetrics.IncludeApis">
            <summary>
            Indicates whether metrics should generate summary statistics for called API operations.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueMetrics.#ctor">
            <summary>
            Creates a new QueueMetrics instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueMetrics.#ctor(System.Boolean)">
            <summary>
            Creates a new QueueMetrics instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueMetrics.ToXml(Azure.Storage.Queues.Models.QueueMetrics,System.String,System.String)">
            <summary>
            Serialize a QueueMetrics instance as XML.
            </summary>
            <param name="value">The QueueMetrics instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "Metrics".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueMetrics.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueMetrics instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueMetrics instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueProperties">
            <summary>
            QueueProperties
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueProperties.Metadata">
            <summary>
            x-ms-meta
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueProperties.ApproximateMessagesCount">
            <summary>
            The approximate number of messages in the queue. This number is not lower than the actual number of messages in the queue, but could be higher.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueProperties.#ctor">
            <summary>
            Creates a new QueueProperties instance
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueRetentionPolicy">
            <summary>
            the retention policy
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueRetentionPolicy.Enabled">
            <summary>
            Indicates whether a retention policy is enabled for the storage service
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueRetentionPolicy.Days">
            <summary>
            Indicates the number of days that metrics or logging or soft-deleted data should be retained. All data older than this value will be deleted
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueRetentionPolicy.#ctor">
            <summary>
            Creates a new QueueRetentionPolicy instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueRetentionPolicy.ToXml(Azure.Storage.Queues.Models.QueueRetentionPolicy,System.String,System.String)">
            <summary>
            Serialize a QueueRetentionPolicy instance as XML.
            </summary>
            <param name="value">The QueueRetentionPolicy instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "RetentionPolicy".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueRetentionPolicy.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueRetentionPolicy instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueRetentionPolicy instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueSendMessage">
            <summary>
            A Message object which can be stored in a Queue
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueSendMessage.MessageText">
            <summary>
            The content of the message
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueSendMessage.#ctor">
            <summary>
            Creates a new QueueSendMessage instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueSendMessage.ToXml(Azure.Storage.Queues.Models.QueueSendMessage,System.String,System.String)">
            <summary>
            Serialize a QueueSendMessage instance as XML.
            </summary>
            <param name="value">The QueueSendMessage instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "QueueMessage".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueServiceProperties">
            <summary>
            Storage Service Properties.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueServiceProperties.Logging">
            <summary>
            Azure Analytics Logging settings
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueServiceProperties.HourMetrics">
            <summary>
            A summary of request statistics grouped by API in hourly aggregates for queues
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueServiceProperties.MinuteMetrics">
            <summary>
            a summary of request statistics grouped by API in minute aggregates for queues
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueServiceProperties.Cors">
            <summary>
            The set of CORS rules.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueServiceProperties.#ctor">
            <summary>
            Creates a new QueueServiceProperties instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueServiceProperties.#ctor(System.Boolean)">
            <summary>
            Creates a new QueueServiceProperties instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueServiceProperties.ToXml(Azure.Storage.Queues.Models.QueueServiceProperties,System.String,System.String)">
            <summary>
            Serialize a QueueServiceProperties instance as XML.
            </summary>
            <param name="value">The QueueServiceProperties instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "StorageServiceProperties".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueServiceProperties.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueServiceProperties instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueServiceProperties instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueServiceStatistics">
            <summary>
            Statistics for the storage service.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueServiceStatistics.GeoReplication">
            <summary>
            GeoReplication
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueServiceStatistics.#ctor">
            <summary>
            Creates a new QueueServiceStatistics instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueServiceStatistics.#ctor(System.Boolean)">
            <summary>
            Creates a new QueueServiceStatistics instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueServiceStatistics.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueServiceStatistics instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueServiceStatistics instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueSignedIdentifier">
            <summary>
            signed identifier
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueSignedIdentifier.Id">
            <summary>
            a unique id
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueSignedIdentifier.AccessPolicy">
            <summary>
            An Access policy
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueSignedIdentifier.#ctor">
            <summary>
            Creates a new QueueSignedIdentifier instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueSignedIdentifier.#ctor(System.Boolean)">
            <summary>
            Creates a new QueueSignedIdentifier instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueSignedIdentifier.ToXml(Azure.Storage.Queues.Models.QueueSignedIdentifier,System.String,System.String)">
            <summary>
            Serialize a QueueSignedIdentifier instance as XML.
            </summary>
            <param name="value">The QueueSignedIdentifier instance to serialize.</param>
            <param name="name">An optional name to use for the root element instead of "SignedIdentifier".</param>
            <param name="ns">An optional namespace to use for the root element instead of "".</param>
            <returns>The serialized XML element.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueSignedIdentifier.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueueSignedIdentifier instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueueSignedIdentifier instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueuesSegment">
            <summary>
            The object returned when calling List Queues on a Queue Service.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueuesSegment.ServiceEndpoint">
            <summary>
            ServiceEndpoint
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueuesSegment.Prefix">
            <summary>
            Prefix
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueuesSegment.Marker">
            <summary>
            Marker
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueuesSegment.MaxResults">
            <summary>
            MaxResults
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueuesSegment.QueueItems">
            <summary>
            QueueItems
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueuesSegment.NextMarker">
            <summary>
            NextMarker
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesSegment.#ctor">
            <summary>
            Creates a new QueuesSegment instance
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesSegment.#ctor(System.Boolean)">
            <summary>
            Creates a new QueuesSegment instance
            </summary>
            <param name="skipInitialization">Whether to skip initializing nested objects.</param>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueuesSegment.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new QueuesSegment instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized QueuesSegment instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.SendReceipt">
            <summary>
            The object returned in the QueueMessageList array when calling Put Message on a Queue
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.SendReceipt.MessageId">
            <summary>
            The Id of the Message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.SendReceipt.InsertionTime">
            <summary>
            The time the Message was inserted into the Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.SendReceipt.ExpirationTime">
            <summary>
            The time that the Message will expire and be automatically deleted.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.SendReceipt.PopReceipt">
            <summary>
            This value is required to delete the Message. If deletion fails using this popreceipt then the message has been dequeued by another client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.SendReceipt.TimeNextVisible">
            <summary>
            The time that the message will again become visible in the Queue.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.SendReceipt.#ctor">
            <summary>
            Prevent direct instantiation of SendReceipt instances.
            You can use QueuesModelFactory.SendReceipt instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.SendReceipt.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new SendReceipt instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized SendReceipt instance.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.StorageError">
            <summary>
            StorageError
            </summary>
            <summary>
            Convert StorageErrors into StorageRequestFailedExceptions.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.StorageError.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.StorageError.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.StorageError.#ctor">
            <summary>
            Prevent direct instantiation of StorageError instances.
            You can use QueuesModelFactory.StorageError instead.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.StorageError.FromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserializes XML into a new StorageError instance.
            </summary>
            <param name="element">The XML element to deserialize.</param>
            <returns>A deserialized StorageError instance.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.Models.StorageError.CustomizeFromXml(System.Xml.Linq.XElement,Azure.Storage.Queues.Models.StorageError)">
            <summary>
            Get any additional XML elements for the error.
            </summary>
            <param name="root">
            The XML element
            </param>
            <param name="error">
            <see cref="T:Azure.Storage.Queues.Models.StorageError"/>
            </param>
        </member>
        <member name="P:Azure.Storage.Queues.Models.StorageError.AdditionalInformation">
            <summary>
            Additional error information.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.StorageError.CreateException(Azure.Core.Pipeline.ClientDiagnostics,Azure.Response)">
            <summary>
            Create an exception corresponding to the StorageError.
            </summary>
            <param name="clientDiagnostics">The <see cref="T:Azure.Core.Pipeline.ClientDiagnostics"/> instance to use.</param>
            <param name="response">The failed response.</param>
            <returns>
            A <see cref="T:Azure.RequestFailedException"/>.
            </returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.UpdateReceipt">
            <summary>
            UpdateReceipt
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.UpdateReceipt.PopReceipt">
            <summary>
            The pop receipt of the queue message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.UpdateReceipt.NextVisibleOn">
            <summary>
            A UTC date/time value that represents when the message will be visible on the queue.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.UpdateReceipt.#ctor">
            <summary>
            Prevent direct instantiation of UpdateReceipt instances.
            You can use QueuesModelFactory.UpdateReceipt instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.Models.PeekedMessage">
            <summary>
            The object returned in the QueueMessageList array when calling Peek Messages on a Queue
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessage.MessageId">
            <summary>
            The Id of the Message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessage.MessageText">
            <summary>
            The content of the Message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessage.Body">
            <summary>
            The content of the Message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessage.InsertedOn">
            <summary>
            The time the Message was inserted into the Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessage.ExpiresOn">
            <summary>
            The time that the Message will expire and be automatically deleted.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.PeekedMessage.DequeueCount">
            <summary>
            The number of times the message has been dequeued.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.PeekedMessage.#ctor">
            <summary>
            Prevent direct instantiation of PeekedMessage instances.
            You can use QueuesModelFactory.PeekedMessage instead.
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueMessage">
            <summary>
            The object returned in the QueueMessageList array when calling Get
            Messages on a Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMessage.MessageId">
            <summary>
            The Id of the Message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMessage.PopReceipt">
            <summary>
            This value is required to delete the Message. If deletion fails using this popreceipt then the message has been dequeued by another client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMessage.MessageText">
            <summary>
            The content of the Message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMessage.Body">
            <summary>
            The content of the Message.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMessage.NextVisibleOn">
            <summary>
            The time that the message will again become visible in the Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMessage.InsertedOn">
            <summary>
            The time the Message was inserted into the Queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMessage.ExpiresOn">
            <summary>
            The time that the Message will expire and be automatically deleted.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Models.QueueMessage.DequeueCount">
            <summary>
            The number of times the message has been dequeued.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueMessage.Update(Azure.Storage.Queues.Models.UpdateReceipt)">
            <summary>
            Update a <see cref="T:Azure.Storage.Queues.Models.UpdateReceipt"/> after calling
            <see cref="M:Azure.Storage.Queues.QueueClient.UpdateMessageAsync(System.String,System.String,System.BinaryData,System.TimeSpan,System.Threading.CancellationToken)"/> with the resulting
            <see cref="T:Azure.Storage.Queues.Models.UpdateReceipt"/>.
            </summary>
            <param name="updated">The message details.</param>
            <returns>The updated <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueTraits">
            <summary>
            Specifies options for listing queues with the
            <see cref="M:Azure.Storage.Queues.QueueServiceClient.GetQueuesAsync(Azure.Storage.Queues.Models.QueueTraits,System.String,System.Threading.CancellationToken)"/> operation.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.Models.QueueTraits.None">
            <summary>
            Flag specifying only the default information for queues
            should be included.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.Models.QueueTraits.Metadata">
            <summary>
            Flag specifying that the queue's metadata should be
            included.
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.Models.QueueExtensions">
            <summary>
            QueueTraits enum methods
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Models.QueueExtensions.AsIncludeTypes(Azure.Storage.Queues.Models.QueueTraits)">
            <summary>
            Convert the details into a <see cref="T:Azure.Storage.Queues.Models.ListQueuesIncludeType"/> value.
            </summary>
            <returns>A <see cref="T:Azure.Storage.Queues.Models.ListQueuesIncludeType"/> value.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Specialized.SpecializedQueueExtensions">
            <summary>
            Add methods to <see cref="N:Azure.Storage.Queues"/> clients.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Specialized.SpecializedQueueExtensions.WithClientSideEncryptionOptions(Azure.Storage.Queues.QueueClient,Azure.Storage.ClientSideEncryptionOptions)">
            <summary>
            Creates a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient"/> class, maintaining all the same
            internals but specifying new <see cref="T:Azure.Storage.ClientSideEncryptionOptions"/>.
            </summary>
            <param name="client">Client to base off of.</param>
            <param name="clientSideEncryptionOptions">New encryption options. Setting this to <code>default</code> will clear client-side encryption.</param>
            <returns>New instance with provided options and same internals otherwise.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions">
            <summary>
            Contains Queues-specific options for client-side encryption.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions.#ctor(Azure.Storage.ClientSideEncryptionVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions"/> class.
            </summary>
            <param name="version">The version of clientside encryption to use.</param>
        </member>
        <member name="E:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions.DecryptionFailed">
            <summary>
            Event when failure to decrypt a message occurs.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions.CloneFrom(Azure.Storage.ClientSideEncryptionOptions)">
            <summary>
            Clones the given <see cref="T:Azure.Storage.ClientSideEncryptionOptions"/> as an instance of
            <see cref="T:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions"/>. If the given instance is also a
            <see cref="T:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions"/>, this clones it's specialty data as well.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Azure.Storage.Queues.Specialized.ClientSideDecryptionFailureEventArgs">
            <summary>
            Event args for when a queue message decryption fails.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.Specialized.ClientSideDecryptionFailureEventArgs.Exception">
            <summary>
            The exception thrown.
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.Specialized.SpecializedQueueClientOptions">
            <summary>
            Provides advanced client configuration options for connecting to Azure Queue
            Storage.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.Specialized.SpecializedQueueClientOptions.#ctor(Azure.Storage.Queues.QueueClientOptions.ServiceVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClientOptions"/>
            class.
            </summary>
            <param name="version">
            The <see cref="T:Azure.Storage.Queues.QueueClientOptions.ServiceVersion"/> of the service API used when
            making requests.
            </param>
        </member>
        <member name="P:Azure.Storage.Queues.Specialized.SpecializedQueueClientOptions.ClientSideEncryption">
             <summary>
             Settings for data encryption within the SDK. Client-side encryption adds metadata to your queue
             messages which is necessary to maintain for decryption.
            
             For more information, see <a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-client-side-encryption"/>.
             </summary>
        </member>
        <member name="T:Azure.Storage.Queues.QueueClient">
            <summary>
            A QueueClient represents a URI to the Azure Storage Queue service allowing you to manipulate a queue.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClient._uri">
            <summary>
            The Uri endpoint used by the object.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.Uri">
            <summary>
            Gets the Uri endpoint used by the object.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClient._messagesUri">
            <summary>
            The Uri endpoint used by the object's messages.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.MessagesUri">
            <summary>
            Gets the Uri endpoint used by the object's messages.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClient._pipeline">
            <summary>
            The HttpPipeline used to send REST requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.Pipeline">
            <summary>
            Gets the HttpPipeline used to send REST requests.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClient._version">
            <summary>
            The version of the service to use when sending requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.Version">
            <summary>
            The version of the service to use when sending requests.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClient._clientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Queues.QueueClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.ClientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Queues.QueueClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClient._clientSideEncryption">
            <summary>
            The <see cref="T:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions"/> to be used when sending/receiving requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.ClientSideEncryption">
            <summary>
            The <see cref="T:Azure.Storage.Queues.Specialized.QueueClientSideEncryptionOptions"/> to be used when sending/receiving requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.MaxPeekableMessages">
            <summary>
            QueueMaxMessagesPeek indicates the maximum number of messages
            you can retrieve with each call to Peek.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.MessageMaxBytes">
            <summary>
            Gets the maximum number of bytes allowed for a message's UTF-8 text.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClient._accountName">
            <summary>
            The Storage account name corresponding to the queue client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.AccountName">
            <summary>
            Gets the Storage account name corresponding to the queue client.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClient._name">
            <summary>
            The name of the queue.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.Name">
            <summary>
            Gets the name of the queue.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClient._storageSharedKeyCredential">
            <summary>
            The <see cref="T:Azure.Storage.StorageSharedKeyCredential"/> used to authenticate and generate SAS
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClient.CanGenerateSasUri">
            <summary>
            Determines whether the client is able to generate a SAS.
            If the client is authenticated with a <see cref="T:Azure.Storage.StorageSharedKeyCredential"/>.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient"/>
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, see
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
             <param name="queueName">
             The name of the queue in the storage account to reference.
             </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.#ctor(System.String,System.String,Azure.Storage.Queues.QueueClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, see
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
             <param name="queueName">
             The name of the queue in the storage account to reference.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.Queues.QueueClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient"/>
            class.
            </summary>
            <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri"/> referencing the queue that includes the
            name of the account, and the name of the queue.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net/{queue_name}".
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Queues.QueueClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient"/>
            class.
            </summary>
            <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri"/> referencing the queue that includes the
            name of the account, and the name of the queue.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net/{queue_name}".
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Queues.QueueClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient"/>
            class.
            </summary>
            <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri"/> referencing the queue that includes the
            name of the account, and the name of the queue.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net/{queue_name}".
            </param>
            <param name="credential">
            The token credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Storage.Queues.QueueClientOptions,Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient"/>
            class.
            </summary>
            <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri"/> referencing the queue that includes the
            name of the account, and the name of the queue.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net/{queue_name}".
            </param>
            <param name="authentication">
            An optional authentication policy used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
            <param name="storageSharedKeyCredential">
            The shared key credential used to sign requests.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipeline,Azure.Storage.Queues.QueueClientOptions.ServiceVersion,Azure.Core.Pipeline.ClientDiagnostics,Azure.Storage.ClientSideEncryptionOptions,Azure.Storage.Queues.QueueMessageEncoding)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClient"/>
            class.
            </summary>
            <param name="queueUri">
            A <see cref="P:Azure.Storage.Queues.QueueClient.Uri"/> referencing the queue that includes the
            name of the account, and the name of the queue.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net/{queue_name}".
            </param>
            <param name="pipeline">
            The transport pipeline used to send every request.
            </param>
            <param name="version">
            The version of the service to use when sending requests.
            </param>
            <param name="clientDiagnostics">
            The <see cref="P:Azure.Storage.Queues.QueueClient.ClientDiagnostics"/> instance used to create
            diagnostic scopes every request.
            </param>
            <param name="encryptionOptions">
            Options for client-side encryption.
            </param>
            <param name="messageEncoding">
            The encoding of the message sent over the wire.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SetNameFieldsIfNull">
            <summary>
            Sets the various name fields if they are currently null.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.Create(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Creates a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
             <param name="metadata">
             Optional <see cref="T:System.Collections.Generic.IDictionary`2"/>.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response" />
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.CreateAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Creates a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
             <param name="metadata">
             Optional <see cref="T:System.Collections.Generic.IDictionary`2"/>.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.CreateInternal(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             Creates a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
             <param name="metadata">
             Optional <see cref="T:System.Collections.Generic.IDictionary`2"/>.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.CreateIfNotExists(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/>
             operation creates a new queue under the specified account.
             If the queue already exists, it is not changed.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this queue.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             If the queue does not already exist, a <see cref="T:Azure.Response"/>
             describing the newly created queue. If the queue already exists, <c>null</c>.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.CreateIfNotExistsAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)"/>
             operation creates a new queue under the specified account.
             If the queue already exists, it is not changed.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this queue.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             If the queue does not already exist, a <see cref="T:Azure.Response"/>
             describing the newly created queue. If the queue already exists, <c>null</c>.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.CreateIfNotExistsInternal(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.CreateIfNotExistsInternal(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken)"/>
             operation creates a new queue under the specified account.
             If the queue already exists, it is not changed.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
             <param name="metadata">
             Optional custom metadata to set for this queue.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             If the queue does not already exist, a <see cref="T:Azure.Response"/>
             describing the newly created queue. If the queue already exists, <c>null</c>.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.Exists(System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Queues.QueueClient.Exists(System.Threading.CancellationToken)"/> operation can be called on a
            <see cref="T:Azure.Storage.Queues.QueueClient"/> to see if the associated queue
            exists on the storage account in the storage service.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            Returns true if the queue exists.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Queues.QueueClient.ExistsAsync(System.Threading.CancellationToken)"/> operation can be called on a
            <see cref="T:Azure.Storage.Queues.QueueClient"/> to see if the associated queue
            exists on the storage account in the storage service.
            </summary>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            Returns true if the queue exists.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ExistsInternal(System.Boolean,System.Threading.CancellationToken)">
            <summary>
            The <see cref="M:Azure.Storage.Queues.QueueClient.ExistsInternal(System.Boolean,System.Threading.CancellationToken)"/> operation can be called on a
            <see cref="T:Azure.Storage.Queues.QueueClient"/> to see if the associated queue
            exists on the storage account in the storage service.
            </summary>
            <param name="async">
            Whether to invoke the operation asynchronously.
            </param>
            <param name="cancellationToken">
            Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
            notifications that the operation should be cancelled.
            </param>
            <returns>
            Returns true if the queue exists.
            </returns>
            <remarks>
            A <see cref="T:Azure.RequestFailedException"/> will be thrown if
            a failure occurs.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.DeleteIfExists(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.DeleteIfExists(System.Threading.CancellationToken)"/> operation deletes the specified
             queue if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> Returns true if queue exists and was
             deleted, return false otherwise.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.DeleteIfExistsAsync(System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.DeleteIfExistsAsync(System.Threading.CancellationToken)"/> operation deletes the specified
             queue if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> Returns true if queue exists and was
             deleted, return false otherwise.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.DeleteIfExistsInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.DeleteIfExistsInternal(System.Boolean,System.Threading.CancellationToken)"/> operation deletes the specified
             queue if it exists.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/> to propagate
             notifications that the operation should be cancelled.
             </param>
             <returns>
             A <see cref="T:Azure.Response"/> Returns true if queue exists and was
             deleted, return false otherwise.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.Delete(System.Threading.CancellationToken)">
             <summary>
             Deletes a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.DeleteAsync(System.Threading.CancellationToken)">
             <summary>
             Deletes a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.DeleteInternal(System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             Deletes a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.GetProperties(System.Threading.CancellationToken)">
             <summary>
             Retrieves queue properties and user-defined metadata and properties on the specified queue.
             Metadata is associated with the queue as name-values pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-metadata">
             Get Queue Metadata</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.GetPropertiesAsync(System.Threading.CancellationToken)">
             <summary>
             Retrieves queue properties and user-defined metadata and properties on the specified queue.
             Metadata is associated with the queue as name-values pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-metadata">
             Get Queue Metadata</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.GetPropertiesInternal(System.Boolean,System.Threading.CancellationToken,System.String)">
             <summary>
             Retrieves queue properties and user-defined metadata and properties on the specified queue.
             Metadata is associated with the queue as name-values pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-metadata">
             Get Queue Metadata</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <param name="operationName">
             Optional. To indicate if the name of the operation.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SetMetadata(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-metadata">
             Set Queue Metadata</see>.
             </summary>
             <param name="metadata">
             <see cref="T:System.Collections.Generic.IDictionary`2"/>
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SetMetadataAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-metadata">
             Set Queue Metadata</see>.
             </summary>
             <param name="metadata">
             <see cref="T:System.Collections.Generic.IDictionary`2"/>
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SetMetadataInternal(System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Sets user-defined metadata on the specified queue. Metadata is associated with the queue as name-value pairs.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-metadata">
             Set Queue Metadata</see>.
             </summary>
             <param name="metadata">
             <see cref="T:System.Collections.Generic.IDictionary`2"/>
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.GetAccessPolicy(System.Threading.CancellationToken)">
             <summary>
             Returns details about any stored access policies specified on the queue that may be used with
             Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-acl">
             Get Queue ACL</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> of <see cref="T:System.Collections.Generic.IEnumerable`1" />
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.GetAccessPolicyAsync(System.Threading.CancellationToken)">
             <summary>
             Returns details about any stored access policies specified on the queue that may be used with
             Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-acl">
             Get Queue ACL</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> of <see cref="T:System.Collections.Generic.IEnumerable`1" />
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.GetAccessPolicyInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Returns details about any stored access policies specified on the queue that may be used with
             Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-acl">
             Get Queue ACL</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> of <see cref="T:System.Collections.Generic.IEnumerable`1" />
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SetAccessPolicy(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)">
             <summary>
             SetAccessPolicyAsync sets stored access policies for the queue that may be used with Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-acl">
             Set Queue ACL</see>.
             </summary>
             <param name="permissions">
             IEnumerable of <see cref="T:Azure.Storage.Queues.Models.QueueSignedIdentifier"/>
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SetAccessPolicyAsync(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Threading.CancellationToken)">
             <summary>
             SetAccessPolicyAsync sets stored access policies for the queue that may be used with Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-acl">
             Set Queue ACL</see>.
             </summary>
             <param name="permissions">
             IEnumerable of <see cref="T:Azure.Storage.Queues.Models.QueueSignedIdentifier"/>
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SetAccessPolicyInternal(System.Collections.Generic.IEnumerable{Azure.Storage.Queues.Models.QueueSignedIdentifier},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             SetAccessPolicyInternal sets stored access policies for the queue that may be used with Shared Access Signatures.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-acl">
             Set Queue ACL</see>.
             </summary>
             <param name="permissions">
             IEnumerable of <see cref="T:Azure.Storage.Queues.Models.QueueSignedIdentifier"/>
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ClearMessages(System.Threading.CancellationToken)">
             <summary>
             Deletes all messages from a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/clear-messages">
             Clear Messages</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ClearMessagesAsync(System.Threading.CancellationToken)">
             <summary>
             Deletes all messages from a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/clear-messages">
             Clear Messages</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ClearMessagesInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Deletes all messages from a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/clear-messages">
             Clear Messages</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String)">
             <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
             <param name="messageText">
             Message text.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String)">
             <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
             <param name="messageText">
             Message text.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Threading.CancellationToken)">
             <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
             <param name="messageText">
             Message text.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
             <param name="messageText">
             Message text.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SendMessage(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
             <param name="messageText">
             Message text.
             </param>
             <param name="visibilityTimeout">
             Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
             </param>
             <param name="timeToLive">
             Optional. Specifies the time-to-live interval for the message
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SendMessage(System.BinaryData,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
             <param name="message">
             Message.
             </param>
             <param name="visibilityTimeout">
             Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
             </param>
             <param name="timeToLive">
             Optional. Specifies the time-to-live interval for the message
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.String,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
             <param name="messageText">
             Message text.
             </param>
             <param name="visibilityTimeout">
             Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
             </param>
             <param name="timeToLive">
             Optional. Specifies the time-to-live interval for the message
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SendMessageAsync(System.BinaryData,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
             <param name="message">
             Message.
             </param>
             <param name="visibilityTimeout">
             Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
             </param>
             <param name="timeToLive">
             Optional. Specifies the time-to-live interval for the message
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.SendMessageInternal(System.BinaryData,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Adds a new message to the back of a queue. The visibility timeout specifies how long the message should be invisible
             to Dequeue and Peek operations. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/put-message">
             Put Message</see>.
             </summary>
             <param name="message">
             Message text.
             </param>
             <param name="visibilityTimeout">
             Visibility timeout.  Optional with a default value of 0.  Cannot be larger than 7 days.
             </param>
             <param name="timeToLive">
             Optional. Specifies the time-to-live interval for the message
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessages">
             <summary>
             Receives one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync">
             <summary>
             Retrieves one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Threading.CancellationToken)">
             <summary>
             Receives one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Threading.CancellationToken)">
             <summary>
             Retrieves one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessages(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             Receives one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32.
             If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.
             </param>
             <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesAsync(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             Retrieves one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32.
             If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.
             </param>
             <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessagesInternal(System.Nullable{System.Int32},System.Nullable{System.TimeSpan},System.String,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Retrieves one or more messages from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to retrieve from the queue, up to a maximum of 32.
             If fewer are visible, the visible messages are returned. By default, a single message is retrieved from the queue with this operation.
             </param>
             <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
             <param name="operationName">
             Operation name for diagnostic logging.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessage(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             Receives one message from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is a <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessageAsync(System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
             <summary>
             Retrieves one message from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is a <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.ReceiveMessageInternal(System.Nullable{System.TimeSpan},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Retrieves one message from the front of the queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-messages">
             Get Messages</see>.
             </summary>
             <param name="visibilityTimeout">
             Optional. Specifies the new visibility timeout value, in seconds, relative to server time. The default value is 30 seconds.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is a <see cref="T:Azure.Storage.Queues.Models.QueueMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.PeekMessage(System.Threading.CancellationToken)">
             <summary>
             Retrieves one message from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is a <see cref="T:Azure.Storage.Queues.Models.PeekedMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.PeekMessageAsync(System.Threading.CancellationToken)">
             <summary>
             Retrieves one message from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is a <see cref="T:Azure.Storage.Queues.Models.PeekedMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.PeekMessageInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Retrieves one message from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is a <see cref="T:Azure.Storage.Queues.Models.PeekedMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.PeekMessages(System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             Retrieves one or more messages from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
             <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to peek from the queue, up to a maximum of 32.
             By default, a single message is peeked from the queue with this operation.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.PeekedMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.PeekMessagesAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             Retrieves one or more messages from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
             <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to peek from the queue, up to a maximum of 32.
             By default, a single message is peeked from the queue with this operation.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.PeekedMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.PeekMessagesInternal(System.Nullable{System.Int32},System.String,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Retrieves one or more messages from the front of the queue but does not alter the visibility of the message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/peek-messages">
             Peek Messages</see>.
             </summary>
             <param name="maxMessages">
             Optional. A nonzero integer value that specifies the number of messages to peek from the queue, up to a maximum of 32.
             By default, a single message is peeked from the queue with this operation.
             </param>
             <param name="operationName">
             Operation name for diagnostic logging.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/> where T is an array of <see cref="T:Azure.Storage.Queues.Models.PeekedMessage"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.GetMessageUri(System.String)">
            <summary>
            Get the URI to a specific message given its ID.
            </summary>
            <param name="messageId">ID of the message.</param>
            <returns>URI to the given message.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.DeleteMessage(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Permanently removes the specified message from its queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-message2">
             Delete Message</see>.
             </summary>
             <param name="messageId">ID of the message to delete.</param>
             <param name="popReceipt">
             Required. A valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.DeleteMessageAsync(System.String,System.String,System.Threading.CancellationToken)">
             <summary>
             Permanently removes the specified message from its queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-message2">
             Delete Message</see>.
             </summary>
             <param name="messageId">ID of the message to delete.</param>
             <param name="popReceipt">
             Required. A valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.DeleteMessageInternal(System.String,System.String,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Permanently removes the specified message from its queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-message2">
             Delete Message</see>.
             </summary>
             <param name="messageId">ID of the message to delete.</param>
             <param name="popReceipt">
             Required. A valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.UpdateMessage(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
             Changes a message's visibility timeout and contents. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/update-message">
             Update Message</see>.
             </summary>
             <param name="messageId">ID of the message to update.</param>
             <param name="popReceipt">
             Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
             <param name="messageText">
             Optional. Updated message text.
             </param>
             <param name="visibilityTimeout">
             Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
             or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
             expiry time. A message can be updated until it has been deleted or has expired.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.UpdateMessage(System.String,System.String,System.BinaryData,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
             Changes a message's visibility timeout and contents. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/update-message">
             Update Message</see>.
             </summary>
             <param name="messageId">ID of the message to update.</param>
             <param name="popReceipt">
             Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
             <param name="message">
             Optional. Updated message.
             </param>
             <param name="visibilityTimeout">
             Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
             or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
             expiry time. A message can be updated until it has been deleted or has expired.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.UpdateMessageAsync(System.String,System.String,System.String,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
             Changes a message's visibility timeout and contents. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/update-message">
             Update Message</see>.
             </summary>
             <param name="messageId">ID of the message to update.</param>
             <param name="popReceipt">
             Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
             <param name="messageText">
             Optional. Updated message text.
             </param>
             <param name="visibilityTimeout">
             Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
             or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
             expiry time. A message can be updated until it has been deleted or has expired.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.UpdateMessageAsync(System.String,System.String,System.BinaryData,System.TimeSpan,System.Threading.CancellationToken)">
             <summary>
             Changes a message's visibility timeout and contents. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/update-message">
             Update Message</see>.
             </summary>
             <param name="messageId">ID of the message to update.</param>
             <param name="popReceipt">
             Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
             <param name="message">
             Optional. Updated message.
             </param>
             <param name="visibilityTimeout">
             Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
             or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
             expiry time. A message can be updated until it has been deleted or has expired.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.UpdateMessageInternal(System.BinaryData,System.String,System.String,System.TimeSpan,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Changes a message's visibility timeout and contents. The message content must be a UTF-8 encoded string that is up to 64KB in size.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/update-message">
             Update Message</see>.
             </summary>
             <param name="message">
             Updated message.
             </param>
             <param name="messageId">ID of the message to update.</param>
             <param name="popReceipt">
             Required. Specifies the valid pop receipt value returned from an earlier call to the Get Messages or Update Message operation.
             </param>
             <param name="visibilityTimeout">
             Required. Specifies the new visibility timeout value, in seconds, relative to server time. The new value must be larger than
             or equal to 0, and cannot be larger than 7 days. The visibility timeout of a message cannot be set to a value later than the
             expiry time. A message can be updated until it has been deleted or has expired.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             Optional <see cref="T:System.Threading.CancellationToken"/>.
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasPermissions,System.DateTimeOffset)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasPermissions,System.DateTimeOffset)"/>
             returns a <see cref="P:Azure.Storage.Queues.QueueClient.Uri"/> that generates a Queue Service
             Shared Access Signature (SAS) Uri based on the Client properties
             and parameters passed.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>.
             </summary>
             <param name="permissions">
             Required. Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Storage.Sas.QueueSasPermissions"/>.
             </param>
             <param name="expiresOn">
             Required. Specifies the time at which the SAS becomes invalid. This field
             must be omitted if it has been specified in an associated stored access policy.
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Sas.QueueSasBuilder"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:System.Exception"/> will be thrown if a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasBuilder)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueClient.GenerateSasUri(Azure.Storage.Sas.QueueSasBuilder)"/> returns a
             <see cref="P:Azure.Storage.Queues.QueueClient.Uri"/> that generates a Queue Service SAS Uri based
             on the Client properties and builder passed.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Constructing a Service SAS</see>
             </summary>
             <param name="builder">
             Used to generate a Shared Access Signature (SAS)
             </param>
             <returns>
             A <see cref="T:Azure.Storage.Sas.QueueSasBuilder"/> on successfully deleting.
             </returns>
             <remarks>
             A <see cref="T:System.Exception"/> will be thrown if a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Queues.QueueClientOptions">
            <summary>
            Provides the client configuration options for connecting to Azure Queue
            Storage
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClientOptions.LatestVersion">
            <summary>
            The Latest service version supported by this client library.
            </summary>
        </member>
        <member name="T:Azure.Storage.Queues.QueueClientOptions.ServiceVersion">
             <summary>
             The versions of Azure Queue Storage supported by this client
             library.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/versioning-for-the-azure-storage-services">
             Versioning for the Azure Storage services</see>.
             </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2019_02_02">
            <summary>
            The 2019-02-02 service version described at
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/version-2019-02-02">
            Version 2019-02-02</see>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2019_07_07">
            <summary>
            The 2019-07-07 service version described at
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/version-2019-07-07">
            Version 2019-07-07</see>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2019_12_12">
            <summary>
            The 2019-12-12 service version.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueClientOptions.ServiceVersion.V2020_02_10">
            <summary>
            The 2020-02-10 service version.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClientOptions.Version">
            <summary>
            Gets the <see cref="T:Azure.Storage.Queues.QueueClientOptions.ServiceVersion"/> of the service API used when
            making requests.  For more, see
            For more information, see
            <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/versioning-for-the-azure-storage-services">
            Versioning for the Azure Storage services</see>.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClientOptions.#ctor(Azure.Storage.Queues.QueueClientOptions.ServiceVersion)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueClientOptions"/>
            class.
            </summary>
            <param name="version">
            The <see cref="T:Azure.Storage.Queues.QueueClientOptions.ServiceVersion"/> of the service API used when
            making requests.
            </param>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClientOptions.GeoRedundantSecondaryUri">
             <summary>
             Gets or sets the secondary storage <see cref="T:System.Uri"/> that can be read from for the storage account if the
             account is enabled for RA-GRS.
            
             If this property is set, the secondary Uri will be used for GET or HEAD requests during retries.
             If the status of the response from the secondary Uri is a 404, then subsequent retries for
             the request will not use the secondary Uri again, as this indicates that the resource
             may not have propagated there yet. Otherwise, subsequent retries will alternate back and forth
             between primary and secondary Uri.
             </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueClientOptions.MessageEncoding">
            <summary>
            Gets or sets a message encoding that determines how <see cref="P:Azure.Storage.Queues.Models.QueueMessage.Body"/> is represented in HTTP requests and responses.
            The default is <see cref="F:Azure.Storage.Queues.QueueMessageEncoding.None"/>.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClientOptions.AddHeadersAndQueryParameters">
            <summary>
            Add headers and query parameters in <see cref="P:Azure.Core.DiagnosticsOptions.LoggedHeaderNames"/> and <see cref="P:Azure.Core.DiagnosticsOptions.LoggedQueryParameters"/>
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClientOptions.Build(Azure.Core.Pipeline.HttpPipelinePolicy)">
            <summary>
            Create an HttpPipeline from QueueClientOptions.
            </summary>
            <param name="authentication">Optional authentication policy.</param>
            <returns>An HttpPipeline to use for Storage requests.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueClientOptions.Build(System.Object)">
            <summary>
            Create an HttpPipeline from QueueClientOptions.
            </summary>
            <param name="credentials">Optional authentication credentials.</param>
            <returns>An HttpPipeline to use for Storage requests.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.QueueMessageEncoding">
            <summary>
            Determines how <see cref="P:Azure.Storage.Queues.Models.QueueMessage.Body"/> is represented in HTTP requests and responses.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueMessageEncoding.None">
            <summary>
            The <see cref="P:Azure.Storage.Queues.Models.QueueMessage.Body"/> is represented verbatim in HTTP requests and responses. I.e. message is not transformed.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueMessageEncoding.Base64">
            <summary>
            The <see cref="P:Azure.Storage.Queues.Models.QueueMessage.Body"/> is represented as Base64 encoded string in HTTP requests and responses.
            </summary>
            <remarks>
            This was the default behavior in the prior v11 library.  See
            <see href="https://docs.microsoft.com/en-us/dotnet/api/microsoft.azure.storage.queue.cloudqueue.encodemessage?view=azure-dotnet-legacy">CloudQueue.EncodeMessage</see>.
            Using this option can make interop with an existing application easier.
            </remarks>
        </member>
        <member name="T:Azure.Storage.Queues.QueueServiceClient">
            <summary>
            A QueueServiceClient represents a URL to the Azure Storage Queue service.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueServiceClient._uri">
            <summary>
            The Uri endpoint used by the object.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueServiceClient.Uri">
            <summary>
            The Uri endpoint used by the object.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueServiceClient._pipeline">
            <summary>
            The HttpPipeline used to send REST requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueServiceClient.Pipeline">
            <summary>
            Gets the HttpPipeline used to send REST requests.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueServiceClient._version">
            <summary>
            The version of the service to use when sending requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueServiceClient.Version">
            <summary>
            The version of the service to use when sending requests.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueServiceClient._clientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Queues.QueueServiceClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueServiceClient.ClientDiagnostics">
            <summary>
            The <see cref="P:Azure.Storage.Queues.QueueServiceClient.ClientDiagnostics"/> instance used to create diagnostic scopes
            every request.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueServiceClient._clientSideEncryption">
            <summary>
            The <see cref="T:Azure.Storage.ClientSideEncryptionOptions"/> to be used when sending/receiving requests.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueServiceClient.ClientSideEncryption">
            <summary>
            The <see cref="T:Azure.Storage.ClientSideEncryptionOptions"/> to be used when sending/receiving requests.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueServiceClient._accountName">
            <summary>
            The Storage account name corresponding to the service client.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueServiceClient.AccountName">
            <summary>
            Gets the Storage account name corresponding to the service client.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueServiceClient._storageSharedKeyCredential">
            <summary>
            The <see cref="T:Azure.Storage.StorageSharedKeyCredential"/> used to authenticate and generate SAS
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueServiceClient.CanGenerateAccountSasUri">
            <summary>
            Determines whether the client is able to generate a SAS.
            If the client is authenticated with a <see cref="T:Azure.Storage.StorageSharedKeyCredential"/>.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueServiceClient"/>
            class for mocking.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.String)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueServiceClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, see
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.String,Azure.Storage.Queues.QueueClientOptions)">
             <summary>
             Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueServiceClient"/>
             class.
             </summary>
             <param name="connectionString">
             A connection string includes the authentication information
             required for your application to access data in an Azure Storage
             account at runtime.
            
             For more information, see
             <see href="https://docs.microsoft.com/azure/storage/common/storage-configure-connection-string">
             Configure Azure Storage connection strings</see>.
             </param>
             <param name="options">
             Optional client options that define the transport pipeline
             policies for authentication, retries, etc., that are applied to
             every request.
             </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Storage.Queues.QueueClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueServiceClient"/>
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Queues.QueueServiceClient.Uri"/> referencing the queue service.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net".
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Storage.StorageSharedKeyCredential,Azure.Storage.Queues.QueueClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueServiceClient"/>
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Queues.QueueServiceClient.Uri"/> referencing the queue service.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net".
            </param>
            <param name="credential">
            The shared key credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Storage.Queues.QueueClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueServiceClient"/>
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Queues.QueueServiceClient.Uri"/> referencing the queue service.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net".
            </param>
            <param name="credential">
            The token credential used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.#ctor(System.Uri,Azure.Core.Pipeline.HttpPipelinePolicy,Azure.Storage.Queues.QueueClientOptions,Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueServiceClient"/>
            class.
            </summary>
            <param name="serviceUri">
            A <see cref="P:Azure.Storage.Queues.QueueServiceClient.Uri"/> referencing the queue service.
            This is likely to be similar to "https://{account_name}.queue.core.windows.net".
            </param>
            <param name="authentication">
            An optional authentication policy used to sign requests.
            </param>
            <param name="options">
            Optional client options that define the transport pipeline
            policies for authentication, retries, etc., that are applied to
            every request.
            </param>
            <param name="storageSharedKeyCredential">
            The shared key credential used to sign requests.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetQueueClient(System.String)">
            <summary>
            Create a new <see cref="T:Azure.Storage.Queues.QueueClient"/> object by appending
            <paramref name="queueName"/> to the end of <see cref="P:Azure.Storage.Queues.QueueServiceClient.Uri"/>.
            The new <see cref="T:Azure.Storage.Queues.QueueClient"/> uses the same request
            policy pipeline as the <see cref="T:Azure.Storage.Queues.QueueServiceClient"/>.
            </summary>
            <param name="queueName">
            The name of the queue to reference.
            </param>
            <returns>
            A <see cref="T:Azure.Storage.Queues.QueueClient"/> for the desired queue.
            </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetQueues(Azure.Storage.Queues.Models.QueueTraits,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueServiceClient.GetQueues(Azure.Storage.Queues.Models.QueueTraits,System.String,System.Threading.CancellationToken)"/> operation returns an async
             sequence of queues in the storage account.  Enumerating the
             queues may make multiple requests to the service while fetching
             all the values.  Queue names are returned in lexicographic order.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-queues1">
             List Queues</see>.
             </summary>
             <param name="traits">
             Optional trait options for shaping the queues.
             </param>
             <param name="prefix">
             Optional string that filters the results to return only queues
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             The queues in the storage account.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetQueuesAsync(Azure.Storage.Queues.Models.QueueTraits,System.String,System.Threading.CancellationToken)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueServiceClient.GetQueuesAsync(Azure.Storage.Queues.Models.QueueTraits,System.String,System.Threading.CancellationToken)"/> operation returns an async
             collection of queues in the storage account.  Enumerating the
             queues may make multiple requests to the service while fetching
             all the values.  Queue names are returned in lexicographic order.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-queues1">
             List Queues</see>.
             </summary>
             <param name="traits">
             Optional trait options for shaping the queues.
             </param>
             <param name="prefix">
             Optional string that filters the results to return only queues
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             The queues in the storage account.
             </returns>
             <remarks>
             Use an empty marker to start enumeration from the beginning. Queue names are returned in lexicographic order.
             After getting a segment, process it, and then call ListQueuesSegment again (passing in the next marker) to get the next segment.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetQueuesInternal(System.String,Azure.Storage.Queues.Models.QueueTraits,System.String,System.Nullable{System.Int32},System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Returns a single segment of containers starting from the specified marker.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/list-queues1">
             List Queues</see>.
             </summary>
             <param name="marker">
             Marker from the previous request.
             </param>
             <param name="traits">
             Optional trait options for shaping the queues.
             </param>
             <param name="prefix">
             Optional string that filters the results to return only queues
             whose name begins with the specified <paramref name="prefix"/>.
             </param>
             <param name="pageSizeHint">
             Optional hint to specify the desired size of the page returned.
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             A single segment of containers starting from the specified marker, including the next marker if appropriate.
             </returns>
             <remarks>
             Use an empty marker to start enumeration from the beginning. Queue names are returned in lexicographic order.
             After getting a segment, process it, and then call ListQueuesSegmentAsync again (passing in the next marker) to get the next segment.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetProperties(System.Threading.CancellationToken)">
             <summary>
             Gets the properties of the queue service.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-service-properties">
             Get Queue Service Properties</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetPropertiesAsync(System.Threading.CancellationToken)">
             <summary>
             Gets the properties of the queue service.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-service-properties">
             Get Queue Service Properties</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetPropertiesInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Gets the properties of the queue service.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-service-properties">
             Get Queue Service Properties</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.SetProperties(Azure.Storage.Queues.Models.QueueServiceProperties,System.Threading.CancellationToken)">
             <summary>
             Sets the properties of the queue service.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-service-properties">
             Set Queue Service Properties</see>.
             </summary>
             <param name="properties">
             <see cref="T:Azure.Storage.Queues.Models.QueueServiceProperties"/>
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.SetPropertiesAsync(Azure.Storage.Queues.Models.QueueServiceProperties,System.Threading.CancellationToken)">
             <summary>
             Sets the properties of the queue service.
            
             For more information, see <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-service-properties">
             Set Queue Service Properties</see>.
             </summary>
             <param name="properties">
             <see cref="T:Azure.Storage.Queues.Models.QueueServiceProperties"/>
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.SetPropertiesInternal(Azure.Storage.Queues.Models.QueueServiceProperties,System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Sets the properties of the queue service.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/set-queue-service-properties">
             Set Queue Service Properties</see>.
             </summary>
             <param name="properties">
             <see cref="T:Azure.Storage.Queues.Models.QueueServiceProperties"/>
             </param>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetStatistics(System.Threading.CancellationToken)">
             <summary>
             Retrieves statistics related to replication for the Blob service. It is
             only available on the secondary location endpoint when read-access
             geo-redundant replication is enabled for the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-service-stats">
             Get Queue Service Stats</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetStatisticsAsync(System.Threading.CancellationToken)">
             <summary>
             Retrieves statistics related to replication for the Blob service. It is
             only available on the secondary location endpoint when read-access
             geo-redundant replication is enabled for the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-service-stats">
             Get Queue Service Stats</see>.
             </summary>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GetStatisticsInternal(System.Boolean,System.Threading.CancellationToken)">
             <summary>
             Retrieves statistics related to replication for the Blob service. It is
             only available on the secondary location endpoint when read-access
             geo-redundant replication is enabled for the storage account.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/get-queue-service-stats">
             Get Queue Service Stats</see>.
             </summary>
             <param name="async">
             Whether to invoke the operation asynchronously.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response`1"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.CreateQueue(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Creates a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
             <param name="queueName">
             The name of the queue to create.
             </param>
             <param name="metadata">
             Optional <see cref="T:System.Collections.Generic.IDictionary`2"/>.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             A newly created <see cref="T:Azure.Response`1"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.CreateQueueAsync(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Threading.CancellationToken)">
             <summary>
             Creates a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/create-queue4">
             Create Queue</see>.
             </summary>
             <param name="queueName">
             The name of the queue to create.
             </param>
             <param name="metadata">
             Optional <see cref="T:System.Collections.Generic.IDictionary`2"/>.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             A newly created <see cref="T:Azure.Response`1"/>.
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.DeleteQueue(System.String,System.Threading.CancellationToken)">
             <summary>
             Deletes a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
             <param name="queueName">
             The name of the queue to delete.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.DeleteQueueAsync(System.String,System.Threading.CancellationToken)">
             <summary>
             Deletes a queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/delete-queue3">
             Delete Queue</see>.
             </summary>
             <param name="queueName">
             The name of the queue to delete.
             </param>
             <param name="cancellationToken">
             <see cref="T:System.Threading.CancellationToken"/>
             </param>
             <returns>
             <see cref="T:Azure.Response"/>
             </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasPermissions,System.DateTimeOffset,Azure.Storage.Sas.AccountSasResourceTypes)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasPermissions,System.DateTimeOffset,Azure.Storage.Sas.AccountSasResourceTypes)"/>
             returns a <see cref="P:Azure.Storage.Queues.QueueServiceClient.Uri"/> that generates a Queue
             Account Shared Access Signature based on the
             Client properties and parameters passed. The SAS is signed by the
             shared key credential of the client.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas">
             Constructing a Service SAS</see>
             </summary>
             <param name="permissions">
             Required. Specifies the list of permissions to be associated with the SAS.
             See <see cref="T:Azure.Storage.Sas.AccountSasPermissions"/>.
             </param>
             <param name="expiresOn">
             Required. The time at which the shared access signature becomes invalid.
             </param>
             <param name="resourceTypes">
             Specifies the resource types associated with the shared access signature.
             The user is restricted to operations on the specified resources.
             See <see cref="T:Azure.Storage.Sas.AccountSasResourceTypes"/>.
             </param>
             <returns>
             A <see cref="P:Azure.Storage.Queues.QueueServiceClient.Uri"/> containing the SAS Uri.
             </returns>
             <remarks>
             A <see cref="T:Azure.RequestFailedException"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="M:Azure.Storage.Queues.QueueServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasBuilder)">
             <summary>
             The <see cref="M:Azure.Storage.Queues.QueueServiceClient.GenerateAccountSasUri(Azure.Storage.Sas.AccountSasBuilder)"/> returns a Uri that
             generates a Service SAS based on the Client properties and builder passed.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas">
             Constructing a Service SAS</see>
             </summary>
             <param name="builder">
             Used to generate a Shared Access Signature (SAS).
             </param>
             <returns>
             A <see cref="P:Azure.Storage.Queues.QueueServiceClient.Uri"/> containing the SAS Uri.
             </returns>
             <remarks>
             A <see cref="T:System.Exception"/> will be thrown if
             a failure occurs.
             </remarks>
        </member>
        <member name="T:Azure.Storage.Queues.QueueUriBuilder">
             <summary>
             The <see cref="T:Azure.Storage.Queues.QueueUriBuilder"/> class provides a convenient way to
             modify the contents of a <see cref="T:System.Uri"/> instance to point to
             different Azure Storage resources like an account, queue, or message.
            
             For more information, see
             <see href="https://docs.microsoft.com/rest/api/storageservices/addressing-queue-service-resources">
             Addressing Queue Service Resources</see>.
             </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueUriBuilder._uri">
            <summary>
            The Uri instance constructed by this builder.  It will be reset to
            null when changes are made and reconstructed when <see cref="T:System.Uri"/>
            is accessed.
            </summary>
        </member>
        <member name="F:Azure.Storage.Queues.QueueUriBuilder._isPathStyleUri">
            <summary>
            Whether the Uri is a path-style Uri (i.e. it is an IP Uri or the domain includes a port that is used by the local emulator).
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueUriBuilder.Scheme">
            <summary>
            Gets or sets the scheme name of the URI.
            Example: "https"
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueUriBuilder.Host">
             <summary>
             Gets or sets the Domain Name System (DNS) host name or IP address
             of a server.
            
             Example: "account.queue.core.windows.net"
             </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueUriBuilder.Port">
            <summary>
            Gets or sets the port number of the URI.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueUriBuilder.AccountName">
            <summary>
            Gets or sets the Azure Storage account name.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueUriBuilder.QueueName">
            <summary>
            Gets or sets the name of a Azure Storage Queue.  The value defaults
            to <see cref="F:System.String.Empty"/> if not present in the
            <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueUriBuilder.Messages">
            <summary>
            Gets or sets whether to reference a queue's messages.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueUriBuilder.MessageId">
            <summary>
            Gets or sets the ID of a message in a queue.  The value defaults to
            <see cref="F:System.String.Empty"/> if not present in the <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueUriBuilder.Sas">
            <summary>
            Gets or sets the Shared Access Signature query parameters, or null
            if not present in the <see cref="T:System.Uri"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Queues.QueueUriBuilder.Query">
            <summary>
            Gets or sets any query information included in the URI that's not
            relevant to addressing Azure storage resources.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueUriBuilder.#ctor(System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Queues.QueueUriBuilder"/>
            class with the specified <see cref="T:System.Uri"/>.
            </summary>
            <param name="uri">
            The <see cref="T:System.Uri"/> to a storage resource.
            </param>
        </member>
        <member name="M:Azure.Storage.Queues.QueueUriBuilder.ToUri">
            <summary>
            Returns the <see cref="T:System.Uri"/> constructed from the
            <see cref="T:Azure.Storage.Queues.QueueUriBuilder"/>'s fields. The <see cref="P:System.Uri.Query"/>
            property contains the SAS and additional query parameters.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueUriBuilder.ToString">
            <summary>
            Returns the display string for the specified
            <see cref="T:Azure.Storage.Queues.QueueUriBuilder"/> instance.
            </summary>
            <returns>
            The display string for the specified <see cref="T:Azure.Storage.Queues.QueueUriBuilder"/>
            instance.
            </returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueUriBuilder.ResetUri">
            <summary>
            Reset our cached URI.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueUriBuilder.BuildUri">
            <summary>
            Construct a <see cref="T:Azure.Core.RequestUriBuilder"/> representing the
            <see cref="T:Azure.Storage.Queues.QueueUriBuilder"/>'s fields. The <see cref="P:System.Uri.Query"/>
            property contains the SAS, snapshot, and unparsed query parameters.
            </summary>
            <returns>The constructed <see cref="T:Azure.Core.RequestUriBuilder"/>.</returns>
        </member>
        <member name="T:Azure.Storage.Queues.QueueExtensions">
            <summary>
            Queue enum extensions.
            </summary>
            <summary>
            Queue enum extensions.
            </summary>
        </member>
        <member name="M:Azure.Storage.Queues.QueueExtensions.ToPermissionsString(Azure.Storage.Sas.QueueAccountSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Storage.Sas.QueueSasBuilder.Permissions"/>.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="M:Azure.Storage.Queues.QueueExtensions.ToPermissionsString(Azure.Storage.Sas.QueueSasPermissions)">
            <summary>
            Create a permissions string to provide
            <see cref="P:Azure.Storage.Sas.QueueSasBuilder.Permissions"/>.
            </summary>
            <returns>A permissions string.</returns>
        </member>
        <member name="T:Azure.Storage.Sas.QueueAccountSasPermissions">
            <summary>
            <see cref="T:Azure.Storage.Sas.QueueAccountSasPermissions"/> contains the list of
            permissions that can be set for a file's access policy.  Use
            <see cref="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(Azure.Storage.Sas.QueueAccountSasPermissions)"/>
            to set the permissions on the <see cref="T:Azure.Storage.Sas.QueueSasBuilder"/>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueAccountSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueAccountSasPermissions.Write">
            <summary>
            Indicates that Write is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueAccountSasPermissions.Delete">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueAccountSasPermissions.List">
            <summary>
            Indicates that List is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueAccountSasPermissions.Add">
            <summary>
            Indicates that Add is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueAccountSasPermissions.Update">
            <summary>
            Indicates that Update is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueAccountSasPermissions.Process">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueAccountSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Storage.Sas.QueueSasBuilder">
             <summary>
             <see cref="T:Azure.Storage.Sas.QueueSasBuilder"/> is used to generate a Shared Access
             Signature (SAS) for an Azure Storage queue.
            
             For more information, see
             <see href="https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas">
             Create  a Service SAS</see>.
             </summary>
        </member>
        <member name="P:Azure.Storage.Sas.QueueSasBuilder.Version">
            <summary>
            The storage service version to use to authenticate requests made
            with this shared access signature, and the service version to use
            when handling requests made with this shared access signature.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.QueueSasBuilder.Protocol">
            <summary>
            The optional signed protocol field specifies the protocol
            permitted for a request made with the SAS.  Possible values are
            <see cref="F:Azure.Storage.Sas.SasProtocol.HttpsAndHttp"/>,
            <see cref="F:Azure.Storage.Sas.SasProtocol.Https"/>, and
            <see cref="F:Azure.Storage.Sas.SasProtocol.None"/>.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.QueueSasBuilder.StartsOn">
            <summary>
            Optionally specify the time at which the shared access signature
            becomes valid.  If omitted when DateTimeOffset.MinValue is used,
            start time for this call is assumed to be the time when the
            storage service receives the request.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.QueueSasBuilder.ExpiresOn">
            <summary>
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.QueueSasBuilder.Permissions">
            <summary>
            The permissions associated with the shared access signature. The
            user is restricted to operations allowed by the permissions. This
            field must be omitted if it has been specified in an associated
            stored access policy.  <see cref="T:Azure.Storage.Sas.QueueSasPermissions"/> and
            <see cref="T:Azure.Storage.Sas.QueueAccountSasPermissions"/> can be used to create the
            permissions string.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.QueueSasBuilder.IPRange">
            <summary>
            Specifies an IP address or a range of IP addresses from which to
            accept requests. If the IP address from which the request
            originates does not match the IP address or address range
            specified on the SAS token, the request is not authenticated.
            When specifying a range of IP addresses, note that the range is
            inclusive.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.QueueSasBuilder.Identifier">
            <summary>
            An optional unique value up to 64 characters in length that
            correlates to an access policy specified for the container.
            </summary>
        </member>
        <member name="P:Azure.Storage.Sas.QueueSasBuilder.QueueName">
            <summary>
            The optional name of the blob being made accessible.
            </summary>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Sas.QueueSasBuilder"/>
            class.
            </summary>
            <remarks>
            This constructor has been deprecated. Please consider using
            <see cref="M:Azure.Storage.Sas.QueueSasBuilder.#ctor(Azure.Storage.Sas.QueueSasPermissions,System.DateTimeOffset)"/>
            to create a Service SAS or
            <see cref="M:Azure.Storage.Sas.QueueSasBuilder.#ctor(Azure.Storage.Sas.QueueAccountSasPermissions,System.DateTimeOffset)"/>
            to create an Account SAS. This change does not have any impact on how
            your application generates or makes use of SAS tokens.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.#ctor(Azure.Storage.Sas.QueueSasPermissions,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Sas.QueueSasBuilder"/>
            class.
            </summary>
            <param name="permissions">
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </param>
            <param name="expiresOn">
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.#ctor(Azure.Storage.Sas.QueueAccountSasPermissions,System.DateTimeOffset)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Sas.QueueSasBuilder"/>
            class.
            </summary>
            <param name="permissions">
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </param>
            <param name="expiresOn">
            The time at which the shared access signature becomes invalid.
            This field must be omitted if it has been specified in an
            associated stored access policy.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(Azure.Storage.Sas.QueueSasPermissions)">
            <summary>
            Sets the permissions for a queue SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Storage.Sas.QueueSasPermissions"/> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(Azure.Storage.Sas.QueueAccountSasPermissions)">
            <summary>
            Sets the permissions for a queue account level SAS.
            </summary>
            <param name="permissions">
            <see cref="T:Azure.Storage.Sas.QueueAccountSasPermissions"/> containing the allowed permissions.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(System.String,System.Boolean)">
            <summary>
            Sets the permissions for the SAS using a raw permissions string.
            </summary>
            <param name="rawPermissions">
            Raw permissions string for the SAS.
            </param>
            <param name="normalize">
            If the permissions should be validated and correctly ordered.
            </param>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(System.String)">
            <summary>
            Sets the permissions for the SAS using a raw permissions string.
            </summary>
            <param name="rawPermissions">Raw permissions string for the SAS.</param>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.ToSasQueryParameters(Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Use an account's <see cref="T:Azure.Storage.StorageSharedKeyCredential"/> to sign this
            shared access signature values to produce the proper SAS query
            parameters for authenticating requests.
            </summary>
            <param name="sharedKeyCredential">
            The storage account's <see cref="T:Azure.Storage.StorageSharedKeyCredential"/>.
            </param>
            <returns>
            The <see cref="T:Azure.Storage.Sas.SasQueryParameters"/> used for authenticating
            requests.
            </returns>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.GetCanonicalName(System.String,System.String)">
            <summary>
            Computes the canonical name for a queue resource for SAS signing.
            </summary>
            <param name="account">
            Account.
            </param>
            <param name="queueName">
            Name of queue.
            </param>
            <returns>
            Canonical name as a string.
            </returns>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.Equals(System.Object)">
            <summary>
            Check if two QueueSasBuilder instances are equal.
            </summary>
            <param name="obj">The instance to compare to.</param>
            <returns>True if they're equal, false otherwise.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.GetHashCode">
            <summary>
            Get a hash code for the QueueSasBuilder.
            </summary>
            <returns>Hash code for the QueueSasBuilder.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.QueueSasBuilder.EnsureState">
            <summary>
            Ensure the <see cref="T:Azure.Storage.Sas.QueueSasBuilder"/>'s properties are in a
            consistent state.
            </summary>
        </member>
        <member name="T:Azure.Storage.Sas.QueueSasPermissions">
            <summary>
            <see cref="T:Azure.Storage.Sas.QueueSasPermissions"/> contains the list of
            permissions that can be set for a file's access policy.  Use
            <see cref="M:Azure.Storage.Sas.QueueSasBuilder.SetPermissions(Azure.Storage.Sas.QueueSasPermissions)"/>
            to set the permissions on the <see cref="T:Azure.Storage.Sas.QueueSasBuilder"/>.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueSasPermissions.Read">
            <summary>
            Indicates that Read is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueSasPermissions.Add">
            <summary>
            Indicates that Add is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueSasPermissions.Update">
            <summary>
            Indicates that Update is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueSasPermissions.Process">
            <summary>
            Indicates that Delete is permitted.
            </summary>
        </member>
        <member name="F:Azure.Storage.Sas.QueueSasPermissions.All">
            <summary>
            Indicates that all permissions are set.
            </summary>
        </member>
        <member name="T:Azure.Storage.Sas.SasExtensions">
            <summary>
            Extension methods for Sas.
            </summary>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ToPermissionsString(Azure.Storage.Sas.AccountSasResourceTypes)">
            <summary>
            Creates a string representing which resource types are allowed
            for <see cref="P:Azure.Storage.Sas.AccountSasBuilder.ResourceTypes"/>.
            </summary>
            <returns>
            A string representing which resource types are allowed.
            </returns>
            <remarks>
            The order here matches the order used by the portal when generating SAS signatures.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ParseResourceTypes(System.String)">
            <summary>
            Parse a string representing which resource types are accessible
            from a shared access signature.
            </summary>
            <param name="s">
            A string representing which resource types are accessible.
            </param>
            <returns>
            An <see cref="T:Azure.Storage.Sas.AccountSasResourceTypes"/> instance.
            </returns>
            <remarks>
            The order here matches the order used by the portal when generating SAS signatures.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ToProtocolString(Azure.Storage.Sas.SasProtocol)">
            <summary>
            Gets a string representation of the protocol.
            </summary>
            <returns>A string representation of the protocol.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ParseProtocol(System.String)">
            <summary>
            Parse a string representation of a protocol.
            </summary>
            <param name="s">A string representation of a protocol.</param>
            <returns>A <see cref="T:Azure.Storage.Sas.SasProtocol"/>.</returns>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ToPermissionsString(Azure.Storage.Sas.AccountSasServices)">
            <summary>
            Creates a string representing which services can be used for
            <see cref="P:Azure.Storage.Sas.AccountSasBuilder.Services"/>.
            </summary>
            <returns>
            A string representing which services are allowed.
            </returns>
            <remarks>
            The order here matches the order used by the portal when generating SAS signatures.
            </remarks>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.ParseAccountServices(System.String)">
            <summary>
            Parse a string representing which services are accessible from a
            shared access signature.
            </summary>
            <param name="s">
            A string representing which services are accessible.
            </param>
            <returns>
            An <see cref="T:Azure.Storage.Sas.AccountSasServices"/> instance.
            </returns>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.FormatTimesForSasSigning(System.DateTimeOffset)">
            <summary>
            FormatTimesForSASSigning converts a time.Time to a snapshotTimeFormat string suitable for a
            SASField's StartTime or ExpiryTime fields. Returns "" if value.IsZero().
            </summary>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Storage.Sas.SasExtensions.AddToBuilder(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Helper method to add query param key value pairs to StringBuilder
            </summary>
            <param name="sb">StringBuilder instance</param>
            <param name="key">query key</param>
            <param name="value">query value</param>
        </member>
        <member name="T:Azure.Storage.Sas.SasQueryParametersInternals">
            <summary>
            Helper to access protected static members of SasQueryParameters.
            </summary>
        </member>
        <member name="F:Azure.Storage.Cryptography.ClientSideDecryptor._potentialCachedIKeyEncryptionKey">
            <summary>
            Clients that can upload data have a key encryption key stored on them. Checking if
            a cached key exists and matches a given <see cref="T:Azure.Storage.Cryptography.Models.EncryptionData"/> saves a call
            to the external key resolver implementation when available.
            </summary>
        </member>
        <member name="F:Azure.Storage.Cryptography.ClientSideDecryptor._keyResolver">
            <summary>
            Resolver to fetch the key encryption key.
            </summary>
        </member>
        <member name="M:Azure.Storage.Cryptography.ClientSideDecryptor.DecryptInternal(System.IO.Stream,Azure.Storage.Cryptography.Models.EncryptionData,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Decrypts the given stream if decryption information is provided.
            Does not shave off unwanted start/end bytes, but will shave off padding.
            </summary>
            <param name="ciphertext">Stream to decrypt.</param>
            <param name="encryptionData">
            Encryption metadata and wrapped content encryption key.
            </param>
            <param name="ivInStream">
            Whether to use the first block of the stream for the IV instead of the value in
            <paramref name="encryptionData"/>. Generally for partial blob downloads where the
            previous block of the ciphertext is the IV for the next.
            </param>
            <param name="noPadding">
            Whether to ignore padding. Generally for partial blob downloads where the end of
            the blob (where the padding occurs) was not downloaded.
            </param>
            <param name="async">Whether to perform this function asynchronously.</param>
            <param name="cancellationToken"></param>
            <returns>
            Decrypted plaintext.
            </returns>
            <exception cref="T:System.Exception">
            Exceptions thrown based on implementations of <see cref="T:Azure.Core.Cryptography.IKeyEncryptionKey"/> and
            <see cref="T:Azure.Core.Cryptography.IKeyEncryptionKeyResolver"/>.
            </exception>
        </member>
        <member name="M:Azure.Storage.Cryptography.ClientSideDecryptor.DecryptInternalV1_0(System.IO.Stream,Azure.Storage.Cryptography.Models.EncryptionData,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Decrypts the given stream if decryption information is provided.
            Does not shave off unwanted start/end bytes, but will shave off padding.
            </summary>
            <param name="ciphertext">Stream to decrypt.</param>
            <param name="encryptionData">
            Encryption metadata and wrapped content encryption key.
            </param>
            <param name="ivInStream">
            Whether to use the first block of the stream for the IV instead of the value in
            <paramref name="encryptionData"/>. Generally for partial blob downloads where the
            previous block of the ciphertext is the IV for the next.
            </param>
            <param name="noPadding">
            Whether to ignore padding. Generally for partial blob downloads where the end of
            the blob (where the padding occurs) was not downloaded.
            </param>
            <param name="async">Whether to perform this function asynchronously.</param>
            <param name="cancellationToken"></param>
            <returns>
            Decrypted plaintext.
            </returns>
            <exception cref="T:System.Exception">
            Exceptions thrown based on implementations of <see cref="T:Azure.Core.Cryptography.IKeyEncryptionKey"/> and
            <see cref="T:Azure.Core.Cryptography.IKeyEncryptionKeyResolver"/>.
            </exception>
        </member>
        <member name="M:Azure.Storage.Cryptography.ClientSideDecryptor.GetContentEncryptionKeyAsync(Azure.Storage.Cryptography.Models.EncryptionData,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Returns the content encryption key for blob. First tries to get the key encryption key from KeyResolver,
            then falls back to IKey stored on this EncryptionPolicy. Unwraps the content encryption key with the
            correct key wrapper.
            </summary>
            <param name="encryptionData">The encryption data.</param>
            <param name="async">Whether to perform asynchronously.</param>
            <param name="cancellationToken"></param>
            <returns>
            Encryption key as a byte array.
            </returns>
            <exception cref="T:System.Exception">
            Exceptions thrown based on implementations of <see cref="T:Azure.Core.Cryptography.IKeyEncryptionKey"/> and
            <see cref="T:Azure.Core.Cryptography.IKeyEncryptionKeyResolver"/>.
            </exception>
        </member>
        <member name="M:Azure.Storage.Cryptography.ClientSideDecryptor.WrapStream(System.IO.Stream,System.Byte[],Azure.Storage.Cryptography.Models.EncryptionData,System.Byte[],System.Boolean)">
            <summary>
            Wraps a stream of ciphertext to stream plaintext.
            </summary>
            <param name="contentStream"></param>
            <param name="contentEncryptionKey"></param>
            <param name="encryptionData"></param>
            <param name="iv"></param>
            <param name="noPadding"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.ClientSideEncryptionOptionsExtensions.Clone(Azure.Storage.ClientSideEncryptionOptions)">
            <summary>
            Extension method to clone an instance of <see cref="T:Azure.Storage.ClientSideEncryptionOptions"/>.
            </summary>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.ClientSideEncryptionOptionsExtensions.CopyOptions(Azure.Storage.ClientSideEncryptionOptions,Azure.Storage.ClientSideEncryptionOptions)">
            <summary>
            Copies all properties from one instance to another. It cannot copy
            <see cref="P:Azure.Storage.ClientSideEncryptionOptions.EncryptionVersion"/>;
            that is the responsibility of the caller who made the instance.
            </summary>
            <param name="source">Object to copy from.</param>
            <param name="destination">Object to copy to.</param>
            <remarks>
            This functionality has been pulled out to be accessible by other
            clone methods available on subclasses. They need the ability to
            instantiate the subclass destination first before copying over the
            properties.
            </remarks>
        </member>
        <member name="T:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm">
            <summary>
            Specifies the encryption algorithm used to encrypt and decrypt a blob.
            </summary>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm"/> structure.
            </summary>
            <param name="value">The string value of the instance.</param>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm.AesCbc256">
            <summary>
            AES-CBC using a 256 bit key.
            </summary>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm.op_Equality(Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm,Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm)">
            <summary>
            Determines if two <see cref="T:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm"/> values are the same.
            </summary>
            <param name="left">The first <see cref="T:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm"/> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm"/> to compare.</param>
            <returns>True if <paramref name="left"/> and <paramref name="right"/> are the same; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm.op_Inequality(Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm,Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm)">
            <summary>
            Determines if two <see cref="T:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm"/> values are different.
            </summary>
            <param name="left">The first <see cref="T:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm"/> to compare.</param>
            <param name="right">The second <see cref="T:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm"/> to compare.</param>
            <returns>True if <paramref name="left"/> and <paramref name="right"/> are different; otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm.op_Implicit(System.String)~Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm">
            <summary>
            Converts a string to a <see cref="T:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm"/>.
            </summary>
            <param name="value">The string value to convert.</param>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm.Equals(Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm)">
            <inheritdoc/>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.ClientSideEncryptionAlgorithm.ToString">
            <inheritdoc/>
        </member>
        <member name="T:Azure.Storage.Cryptography.Models.EncryptionAgent">
            <summary>
            Represents the encryption agent stored on the service.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.EncryptionAgent.EncryptionVersion">
            <summary>
            The protocol version used for encryption.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.EncryptionAgent.EncryptionAlgorithm">
            <summary>
            The algorithm used for encryption.
            </summary>
        </member>
        <member name="T:Azure.Storage.Cryptography.Models.EncryptionData">
            <summary>
            Represents the encryption data that is stored on the service.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.EncryptionData.EncryptionMode">
            <summary>
            The blob encryption mode.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.EncryptionData.WrappedContentKey">
            <summary>
            A <see cref="T:Azure.Storage.Cryptography.Models.KeyEnvelope"/> object that stores the wrapping algorithm, key identifier and the encrypted key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.EncryptionData.EncryptionAgent">
            <summary>
            The encryption agent.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.EncryptionData.ContentEncryptionIV">
            <summary>
            The content encryption IV.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.EncryptionData.KeyWrappingMetadata">
            <summary>
            Metadata for encryption. Currently used only for storing the encryption library, but may contain other data.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.EncryptionData.AgentString">
            <summary>
            Singleton string identifying this encryption library.
            </summary>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.EncryptionDataSerializer.Serialize(Azure.Storage.Cryptography.Models.EncryptionData)">
            <summary>
            Serializes an EncryptionData instance into JSON.
            </summary>
            <param name="data">Data to serialize.</param>
            <returns>The JSON string.</returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.EncryptionDataSerializer.SerializeEncryptionData(Azure.Storage.Cryptography.Models.EncryptionData)">
            <summary>
            Serializes an EncryptionData instance into JSON.
            </summary>
            <param name="data">Data to serialize.</param>
            <returns>The JSON UTF8 bytes.</returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.EncryptionDataSerializer.WriteEncryptionData(System.Text.Json.Utf8JsonWriter,Azure.Storage.Cryptography.Models.EncryptionData)">
            <summary>
            Serializes an EncryptionData instance into JSON and writes it to the given JSON writer.
            </summary>
            <param name="json">The writer to write the serialization to.</param>
            <param name="data">Data to serialize.</param>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.EncryptionDataSerializer.Deserialize(System.String)">
            <summary>
            Deserializes an EncryptionData instance from JSON.
            </summary>
            <param name="serializedData">The serialized data string.</param>
            <returns>The instance.</returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.EncryptionDataSerializer.DeserializeEncryptionData(System.Text.Json.Utf8JsonReader@)">
            <summary>
            Reads an EncryptionData instance from a JSON reader.
            </summary>
            <param name="reader">The reader to parse an EncryptionData isntance from.</param>
            <returns>The instance.</returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.Models.EncryptionDataSerializer.ReadEncryptionData(System.Text.Json.JsonElement)">
            <summary>
            Reads an EncryptionData instance from a parsed JSON object.
            </summary>
            <param name="root">The JSON object model.</param>
            <returns>The instance.</returns>
        </member>
        <member name="T:Azure.Storage.Cryptography.Models.KeyEnvelope">
            <summary>
            Represents the envelope key details JSON schema stored on the service.
            In the envelope technique, a securely generated content encryption key (CEK) is generated
            for every encryption operation. It is then encrypted (wrapped) with the user-provided key
            encryption key (KEK), using a key-wrap algorithm. The wrapped CEK is stored with the
            encrypted data, and needs the KEK to be unwrapped. The KEK and key-wrapping operation is
            never seen by this SDK.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.KeyEnvelope.KeyId">
            <summary>
            The key identifier string.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.KeyEnvelope.EncryptedKey">
            <summary>
            The encrypted content encryption key.
            </summary>
        </member>
        <member name="P:Azure.Storage.Cryptography.Models.KeyEnvelope.Algorithm">
            <summary>
            The algorithm used to wrap the content encryption key.
            </summary>
        </member>
        <member name="M:Azure.Storage.Cryptography.ClientSideEncryptor.EncryptInternal(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Wraps the given read-stream in a CryptoStream and provides the metadata used to create
            that stream.
            </summary>
            <param name="plaintext">Stream to wrap.</param>
            <param name="async">Whether to wrap the content encryption key asynchronously.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The wrapped stream to read from and the encryption metadata for the wrapped stream.</returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.ClientSideEncryptor.BufferedEncryptInternal(System.IO.Stream,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Encrypts the given stream and provides the metadata used to encrypt. This method writes to a memory stream,
            optimized for known-size data that will already be buffered in memory.
            </summary>
            <param name="plaintext">Stream to encrypt.</param>
            <param name="async">Whether to wrap the content encryption key asynchronously.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>The encrypted data and the encryption metadata for the wrapped stream.</returns>
        </member>
        <member name="M:Azure.Storage.Cryptography.ClientSideEncryptor.CreateKey(System.Int32)">
            <summary>
            Securely generate a key.
            </summary>
            <param name="numBits">Key size.</param>
            <returns>The generated key bytes.</returns>
        </member>
        <member name="F:Azure.Storage.Constants.MaxIdleTimeMs">
            <summary>
            The maximum allowed time between read or write calls to the stream for IdleCancellingStream.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultSasVersion">
            <summary>
            Gets the default service version to use when building shared access
            signatures.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultBufferSize">
            <summary>
            The default size of staged blocks when uploading small blobs.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.LargeBufferSize">
            <summary>
            The size of staged blocks when uploading large blobs.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.LargeUploadThreshold">
            <summary>
            The threshold where we switch from staging <see cref="F:Azure.Storage.Constants.DefaultBufferSize"/>
            buffers to staging <see cref="F:Azure.Storage.Constants.LargeBufferSize"/> buffers.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultStreamingDownloadSize">
            <summary>
            The minimum number of bytes to download in Open Read.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultStreamCopyBufferSize">
            <summary>
            Different .NET implementations have different default sizes for <see cref="M:System.IO.Stream.CopyTo(System.IO.Stream)"/>
            and it's overloads. This is the default for .NET Core to be applied everywhere for test consistency.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DefaultDownloadCopyBufferSize">
            <summary>
            The size of the buffer to use when copying streams during a
            download operation.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.BlockNameFormat">
            <summary>
            The default format we use for block names.  There are 50,000
            maximum blocks so we pad the size with up to 4 leading zeros.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.ConnectionStrings">
            <summary>
            Storage Connection String constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.ConnectionStrings.BlobEndpointPortNumber">
            <summary>
            The default port numbers for development storage credentials
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.HeaderNames">
            <summary>
            Header Name constant values.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.Blob">
            <summary>
            Blob constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Blob.Container.RootName">
            <summary>
            The Azure Storage name used to identify a storage account's root container.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Blob.Container.LogsName">
            <summary>
            The Azure Storage name used to identify a storage account's logs container.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Blob.Container.WebName">
            <summary>
            The Azure Storage name used to identify a storage account's web content container.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Blob.Lease.InfiniteLeaseDuration">
            <summary>
            Lease Duration is set as infinite when passed -1.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.File">
            <summary>
            File constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.File.Lease.InfiniteLeaseDuration">
            <summary>
            Lease Duration is set as infinite when passed -1.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.DataLake">
            <summary>
            Data Lake constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.BlobUriSuffix">
            <summary>
            The blob URI suffix.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.DfsUriSuffix">
            <summary>
            The DFS URI suffix.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.ErrorKey">
            <summary>
            The key of the object json object returned for errors.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.ErrorCodeKey">
            <summary>
            The key of the error code returned for errors.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.ErrorMessageKey">
            <summary>
            The key of the error message returned for errors.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.AlreadyExists">
            <summary>
            The Azure Storage error codes for Datalake Client.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.DefaultConcurrentTransfersCount">
            <summary>
            Default concurrent transfers count.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.Pre_2019_12_12_MaxAppendBytes">
            <summary>
            Max upload bytes for less than Service Version 2019-12-12.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.MaxAppendBytes">
            <summary>
            Max upload bytes.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.DataLake.IsDirectoryKey">
            <summary>
            Metadata key for isFolder property.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.Queue">
            <summary>
            Queue constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Queue.MaxMessagesDequeue">
            <summary>
            QueueMaxMessagesDequeue indicates the maximum number of messages
            you can retrieve with each call to Dequeue.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Queue.QueueMessageMaxBytes">
            <summary>
            QueueMessageMaxBytes indicates the maximum number of bytes allowed for a message's UTF-8 text.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.ChangeFeed">
            <summary>
            ChangeFeed constant values.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.QuickQuery">
            <summary>
            Quick Query constant values.
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.Sas">
            <summary>
            Sas constant values.
            </summary>
        </member>
        <member name="F:Azure.Storage.Constants.Sas.PathStylePorts">
            <summary>
            List of ports used for path style addressing.
            Copied from Microsoft.Azure.Storage.Core.Util
            </summary>
        </member>
        <member name="T:Azure.Storage.Constants.Xml">
            <summary>
            XML Element Name constant values.
            </summary>
        </member>
        <member name="T:Azure.Storage.Errors">
            <summary>
            Create exceptions for common error cases.
            </summary>
        </member>
        <member name="T:Azure.Storage.GeoRedundantReadPolicy">
            <summary>
            This policy is used if the SecondaryUri property is passed in on the clientOptions. It allows for storage
            accounts configured with RA-GRS to retry GET or HEAD requests against the secondary storage Uri.
            </summary>
        </member>
        <member name="P:Azure.Storage.SharedAccessSignatureCredentials.SasToken">
            <summary>
            Gets the SAS token used to authenticate requests to the Storage
            service.
            </summary>
        </member>
        <member name="M:Azure.Storage.SharedAccessSignatureCredentials.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:Azure.Storage.SharedAccessSignatureCredentials"/> class.
            </summary>
            <param name="sasToken">
            The SAS token used to authenticate requests to the Storage service.
            </param>
        </member>
        <member name="T:Azure.Storage.StorageClientOptions">
            <summary>
            Defines the client configuration options for connecting to Azure
            Storage.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageClientOptions.StorageScope">
            <summary>
            The default scope used for token authentication with Storage.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.Initialize(Azure.Core.ClientOptions)">
            <summary>
            Set common ClientOptions defaults for Azure Storage.
            </summary>
            <param name="options">Storage ClientOptions.</param>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.AsPolicy(Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Get an authentication policy to sign Storage requests.
            </summary>
            <param name="credential">Credential to use.</param>
            <returns>An authentication policy.</returns>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.AsPolicy(Azure.Core.TokenCredential)">
            <summary>
            Get an authentication policy to sign Storage requests.
            </summary>
            <param name="credential">Credential to use.</param>
            <returns>An authentication policy.</returns>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.GetAuthenticationPolicy(System.Object)">
            <summary>
            Get an optional authentication policy to sign Storage requests.
            </summary>
            <param name="credentials">Optional credentials to use.</param>
            <returns>An optional authentication policy.</returns>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.Build(Azure.Core.ClientOptions,Azure.Core.Pipeline.HttpPipelinePolicy,System.Uri)">
            <summary>
            Create an HttpPipeline from Storage ClientOptions.
            </summary>
            <param name="options">The Storage ClientOptions.</param>
            <param name="authentication">Optional authentication policy.</param>
            <param name="geoRedundantSecondaryStorageUri">The secondary URI to be used for retries on failed read requests</param>
            <returns>An HttpPipeline to use for Storage requests.</returns>
        </member>
        <member name="M:Azure.Storage.StorageClientOptions.Build(Azure.Core.ClientOptions,System.Object,System.Uri)">
            <summary>
            Create an HttpPipeline from Storage ClientOptions.
            </summary>
            <param name="options">The Storage ClientOptions.</param>
            <param name="credentials">Optional authentication credentials.</param>
            <param name="geoRedundantSecondaryStorageUri">The secondary URI to be used for retries on failed read requests</param>
            <returns>An HttpPipeline to use for Storage requests.</returns>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.UseV1MD5">
            <summary>
            Gets or sets a value indicating whether the FISMA MD5 setting will be used.
            </summary>
            <value><c>false</c> to use the FISMA MD5 setting; <c>true</c> to use the .NET default implementation.</value>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_useDevelopmentStorageSetting">
            <summary>
            Validator for the UseDevelopmentStorage setting. Must be "true".
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_developmentStorageProxyUriSetting">
            <summary>
            Validator for the DevelopmentStorageProxyUri setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_defaultEndpointsProtocolSetting">
            <summary>
            Validator for the DefaultEndpointsProtocol setting. Must be either "http" or "https".
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_accountNameSetting">
            <summary>
            Validator for the AccountName setting. No restrictions.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_accountKeyNameSetting">
            <summary>
            Validator for the AccountKey setting. No restrictions.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_accountKeySetting">
            <summary>
            Validator for the AccountKey setting. Must be a valid base64 string.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_blobEndpointSetting">
            <summary>
            Validator for the BlobEndpoint setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_queueEndpointSetting">
            <summary>
            Validator for the QueueEndpoint setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_fileEndpointSetting">
            <summary>
            Validator for the FileEndpoint setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_tableEndpointSetting">
            <summary>
            Validator for the TableEndpoint setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_blobSecondaryEndpointSetting">
            <summary>
            Validator for the BlobSecondaryEndpoint setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_queueSecondaryEndpointSetting">
            <summary>
            Validator for the QueueSecondaryEndpoint setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_fileSecondaryEndpointSetting">
            <summary>
            Validator for the FileSecondaryEndpoint setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_tableSecondaryEndpointSetting">
            <summary>
            Validator for the TableSecondaryEndpoint setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_endpointSuffixSetting">
            <summary>
            Validator for the EndpointSuffix setting. Must be a valid Uri.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_sharedAccessSignatureSetting">
            <summary>
            Validator for the SharedAccessSignature setting. No restrictions.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_devStoreAccount">
            <summary>
            Singleton instance for the development storage account.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.#ctor(System.Object,System.ValueTuple{System.Uri,System.Uri},System.ValueTuple{System.Uri,System.Uri},System.ValueTuple{System.Uri,System.Uri},System.ValueTuple{System.Uri,System.Uri})">
            <summary>
            Initializes a new instance of the <see cref="T:Azure.Storage.StorageConnectionString"/> class using the specified
            account credentials and service endpoints.
            </summary>
            <param name="storageCredentials">A StorageCredentials object.</param>
            <param name="blobStorageUri">A <see cref="T:System.Uri"/> specifying the Blob service endpoint or endpoints.</param>
            <param name="queueStorageUri">A <see cref="T:System.Uri"/> specifying the Queue service endpoint or endpoints.</param>
            <param name="tableStorageUri">A <see cref="T:System.Uri"/> specifying the Table service endpoint or endpoints.</param>
            <param name="fileStorageUri">A <see cref="T:System.Uri"/> specifying the File service endpoint or endpoints.</param>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.DevelopmentStorageAccount">
            <summary>
            Gets a <see cref="T:Azure.Storage.StorageConnectionString"/> object that references the well-known development storage account.
            </summary>
            <value>A <see cref="T:Azure.Storage.StorageConnectionString"/> object representing the development storage account.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.IsDevStoreAccount">
            <summary>
            Indicates whether this account is a development storage account.
            </summary>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.EndpointSuffix">
            <summary>
            The storage service hostname suffix set by the user, if any.
            </summary>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.Settings">
            <summary>
            The connection string parsed into settings.
            </summary>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.DefaultEndpoints">
            <summary>
            True if the user used a constructor that auto-generates endpoints.
            </summary>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.BlobEndpoint">
            <summary>
            Gets the primary endpoint for the Blob service, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri"/> containing the primary Blob service endpoint.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.QueueEndpoint">
            <summary>
            Gets the primary endpoint for the Queue service, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri"/> containing the primary Queue service endpoint.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.TableEndpoint">
            <summary>
            Gets the primary endpoint for the Table service, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri"/> containing the primary Table service endpoint.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.FileEndpoint">
            <summary>
            Gets the primary endpoint for the File service, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri"/> containing the primary File service endpoint.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.BlobStorageUri">
            <summary>
            Gets the endpoints for the Blob service at the primary and secondary location, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri"/> containing the Blob service endpoints.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.QueueStorageUri">
            <summary>
            Gets the endpoints for the Queue service at the primary and secondary location, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri"/> containing the Queue service endpoints.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.TableStorageUri">
            <summary>
            Gets the endpoints for the Table service at the primary and secondary location, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri"/> containing the Table service endpoints.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.FileStorageUri">
            <summary>
            Gets the endpoints for the File service at the primary and secondary location, as configured for the storage account.
            </summary>
            <value>A <see cref="T:System.Uri"/> containing the File service endpoints.</value>
        </member>
        <member name="P:Azure.Storage.StorageConnectionString.Credentials">
            <summary>
            Gets the credentials used to create this <see cref="T:Azure.Storage.StorageConnectionString"/> object.
            </summary>
            <value>A StorageCredentials object.</value>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString._accountName">
            <summary>
            Private record of the account name for use in ToString(bool).
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.Parse(System.String)">
            <summary>
            Parses a connection string and returns a <see cref="T:Azure.Storage.StorageConnectionString"/> created
            from the connection string.
            </summary>
            <param name="connectionString">A valid connection string.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="connectionString"/> is null or empty.</exception>
            <exception cref="T:System.FormatException">Thrown if <paramref name="connectionString"/> is not a valid connection string.</exception>
            <exception cref="T:System.ArgumentException">Thrown if <paramref name="connectionString"/> cannot be parsed.</exception>
            <returns>A <see cref="T:Azure.Storage.StorageConnectionString"/> object constructed from the values provided in the connection string.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.TryParse(System.String,Azure.Storage.StorageConnectionString@)">
            <summary>
            Indicates whether a connection string can be parsed to return a <see cref="T:Azure.Storage.StorageConnectionString"/> object.
            </summary>
            <param name="connectionString">The connection string to parse.</param>
            <param name="account">A <see cref="T:Azure.Storage.StorageConnectionString"/> object to hold the instance returned if
            the connection string can be parsed.</param>
            <returns><b>true</b> if the connection string was successfully parsed; otherwise, <b>false</b>.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.GetDevelopmentStorageAccount(System.Uri)">
            <summary>
            Returns a <see cref="T:Azure.Storage.StorageConnectionString"/> with development storage credentials using the specified proxy Uri.
            </summary>
            <param name="proxyUri">The proxy endpoint to use.</param>
            <returns>The new <see cref="T:Azure.Storage.StorageConnectionString"/>.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ParseCore(System.String,Azure.Storage.StorageConnectionString@,System.Action{System.String})">
            <summary>
            Internal implementation of Parse/TryParse.
            </summary>
            <param name="connectionString">The string to parse.</param>
            <param name="accountInformation">The <see cref="T:Azure.Storage.StorageConnectionString"/> to return.</param>
            <param name="error">A callback for reporting errors.</param>
            <returns>If true, the parse was successful. Otherwise, false.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ParseStringIntoSettings(System.String,System.Action{System.String})">
            <summary>
            Tokenizes input and stores name value pairs.
            </summary>
            <param name="connectionString">The string to parse.</param>
            <param name="error">Error reporting delegate.</param>
            <returns>Tokenized collection.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.Setting(System.String,System.String[])">
            <summary>
            Encapsulates a validation rule for an enumeration based account setting.
            </summary>
            <param name="name">The name of the setting.</param>
            <param name="validValues">A list of valid values for the setting.</param>
            <returns>An <see cref="T:System.Collections.Generic.KeyValuePair`2"/> representing the enumeration constraint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.Setting(System.String,System.Func{System.String,System.Boolean})">
            <summary>
            Encapsulates a validation rule using a func.
            </summary>
            <param name="name">The name of the setting.</param>
            <param name="isValid">A func that determines if the value is valid.</param>
            <returns>An <see cref="T:System.Collections.Generic.KeyValuePair`2"/> representing the constraint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.IsValidBase64String(System.String)">
            <summary>
            Determines whether the specified setting value is a valid base64 string.
            </summary>
            <param name="settingValue">The setting value.</param>
            <returns><c>true</c> if the specified setting value is a valid base64 string; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.IsValidUri(System.String)">
            <summary>
            Validation function that validates Uris.
            </summary>
            <param name="settingValue">Value to validate.</param>
            <returns><c>true</c> if the specified setting value is a valid Uri; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.IsValidDomain(System.String)">
            <summary>
            Validation function that validates a domain name.
            </summary>
            <param name="settingValue">Value to validate.</param>
            <returns><c>true</c> if the specified setting value is a valid domain; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.AllRequired(System.Collections.Generic.KeyValuePair{System.String,System.Func{System.String,System.Boolean}}[])">
            <summary>
            Settings filter that requires all specified settings be present and valid.
            </summary>
            <param name="requiredSettings">A list of settings that must be present.</param>
            <returns>The remaining settings or <c>null</c> if the filter's requirement is not satisfied.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.Optional(System.Collections.Generic.KeyValuePair{System.String,System.Func{System.String,System.Boolean}}[])">
            <summary>
            Settings filter that removes optional values.
            </summary>
            <param name="optionalSettings">A list of settings that are optional.</param>
            <returns>The remaining settings or <c>null</c> if the filter's requirement is not satisfied.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.AtLeastOne(System.Collections.Generic.KeyValuePair{System.String,System.Func{System.String,System.Boolean}}[])">
            <summary>
            Settings filter that ensures that at least one setting is present.
            </summary>
            <param name="atLeastOneSettings">A list of settings of which one must be present.</param>
            <returns>The remaining settings or <c>null</c> if the filter's requirement is not satisfied.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.None(System.Collections.Generic.KeyValuePair{System.String,System.Func{System.String,System.Boolean}}[])">
            <summary>
            Settings filter that ensures that none of the specified settings are present.
            </summary>
            <param name="atLeastOneSettings">A list of settings of which one must not be present.</param>
            <returns>The remaining settings or <c>null</c> if the filter's requirement is not satisfied.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.MatchesAll(System.Func{System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String}}[])">
            <summary>
            Settings filter that ensures that all of the specified filters match.
            </summary>
            <param name="filters">A list of filters of which all must match.</param>
            <returns>The remaining settings or <c>null</c> if the filter's requirement is not satisfied.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.MatchesOne(System.Func{System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String}}[])">
            <summary>
            Settings filter that ensures that exactly one filter matches.
            </summary>
            <param name="filters">A list of filters of which exactly one must match.</param>
            <returns>The remaining settings or <c>null</c> if the filter's requirement is not satisfied.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.MatchesExactly(System.Func{System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String}})">
            <summary>
            Settings filter that ensures that the specified filter is an exact match.
            </summary>
            <param name="filter">A list of filters of which ensures that the specified filter is an exact match.</param>
            <returns>The remaining settings or <c>null</c> if the filter's requirement is not satisfied.</returns>
        </member>
        <member name="F:Azure.Storage.StorageConnectionString.s_validCredentials">
            <summary>
            Settings filter that ensures that a valid combination of credentials is present.
            </summary>
            <returns>The remaining settings or <c>null</c> if the filter's requirement is not satisfied.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.MatchesSpecification(System.Collections.Generic.IDictionary{System.String,System.String},System.Func{System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.String}}[])">
            <summary>
            Tests to see if a given list of settings matches a set of filters exactly.
            </summary>
            <param name="settings">The settings to check.</param>
            <param name="constraints">A list of filters to check.</param>
            <returns>
            If any filter returns null, false.
            If there are any settings left over after all filters are processed, false.
            Otherwise true.
            </returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.GetCredentials(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets a StorageCredentials object corresponding to whatever credentials are supplied in the given settings.
            </summary>
            <param name="settings">The settings to check.</param>
            <returns>The StorageCredentials object specified in the settings.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructBlobEndpoint(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the default blob endpoint using specified settings.
            </summary>
            <param name="settings">The settings to use.</param>
            <returns>The default blob endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructBlobEndpoint(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the default blob endpoint using the specified protocol and account name.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns>The default blob endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructFileEndpoint(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the default file endpoint using specified settings.
            </summary>
            <param name="settings">The settings to use.</param>
            <returns>The default file endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructFileEndpoint(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the default file endpoint using the specified protocol and account name.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns>The default file endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructQueueEndpoint(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the default queue endpoint using the specified settings.
            </summary>
            <param name="settings">The settings.</param>
            <returns>The default queue endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructQueueEndpoint(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the default queue endpoint using the specified protocol and account name.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns>The default queue endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructTableEndpoint(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Gets the default table endpoint using the specified settings.
            </summary>
            <param name="settings">The settings.</param>
            <returns>The default table endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructTableEndpoint(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the default queue endpoint using the specified protocol and account name.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns>The default table endpoint.</returns>
        </member>
        <member name="M:Azure.Storage.StorageConnectionString.ConstructUris(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Construct the Primary/Secondary Uri tuple.
            </summary>
            <param name="scheme">The protocol to use.</param>
            <param name="accountName">The name of the storage account.</param>
            <param name="hostNamePrefix">Prefix that appears before the host name, e.g. "blob".</param>
            <param name="endpointSuffix">The Endpoint DNS suffix; use <c>null</c> for default.</param>
            <param name="sasToken">The sas token; use <c>null</c> for default.</param>
            <returns></returns>
        </member>
        <member name="T:Azure.Storage.StorageCollectionEnumerator`1.StoragePageable">
            <summary>
            Abstract the Storage pattern for async iteration
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageCollectionEnumerator`1.StoragePageable.CanContinue(System.String)">
            <summary>
            Determine if the iteration can continue.
            </summary>
            <param name="continuationToken">
            The next continuation token provided with the last
            <see cref="T:Azure.Page`1"/>.
            </param>
            <returns>
            True if the iteration can continue, false otherwise.
            </returns>
        </member>
        <member name="M:Azure.Storage.StorageCollectionEnumerator`1.StoragePageable.AsPages(System.String,System.Nullable{System.Int32})">
            <summary>
            Enumerate the values a <see cref="T:Azure.Page`1"/> at a time.  This may
            make mutliple service requests.
            </summary>
            <param name="continuationToken">
            A continuation token indicating where to resume paging or null to
            begin paging from the beginning.
            </param>
            <param name="pageHintSize">
            The size of <see cref="T:Azure.Page`1"/>s that should be requested (from
            service operations that support it).
            </param>
            <returns>
            An async sequence of <see cref="T:Azure.Page`1"/>s.
            </returns>
        </member>
        <member name="M:Azure.Storage.StorageCollectionEnumerator`1.StoragePageable.GetEnumerator">
            <summary>
            Enumerate the values in the collection synchronously.  This may
            make mutliple service requests.
            </summary>
            <returns>A sequence of values.</returns>
        </member>
        <member name="T:Azure.Storage.StorageCollectionEnumerator`1.StorageAsyncPageable">
            <summary>
            Abstract the Storage pattern for async iteration
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageCollectionEnumerator`1.StorageAsyncPageable.CanContinue(System.String)">
            <summary>
            Determine if the iteration can continue.
            </summary>
            <param name="continuationToken">
            The next continuation token provided with the last
            <see cref="T:Azure.Page`1"/>.
            </param>
            <returns>
            True if the iteration can continue, false otherwise.
            </returns>
        </member>
        <member name="M:Azure.Storage.StorageCollectionEnumerator`1.StorageAsyncPageable.AsPages(System.String,System.Nullable{System.Int32})">
            <summary>
            Enumerate the values a <see cref="T:Azure.Page`1"/> at a time.  This may
            make mutliple service requests.
            </summary>
            <param name="continuationToken">
            A continuation token indicating where to resume paging or null to
            begin paging from the beginning.
            </param>
            <param name="pageHintSize">
            The size of <see cref="T:Azure.Page`1"/>s that should be requested (from
            service operations that support it).
            </param>
            <returns>
            An async sequence of <see cref="T:Azure.Page`1"/>s.
            </returns>
        </member>
        <member name="M:Azure.Storage.StorageCollectionEnumerator`1.StorageAsyncPageable.GetAsyncEnumerator(System.Threading.CancellationToken)">
            <summary>
            Enumerate the values in the collection asynchronously.  This may
            make mutliple service requests.
            </summary>
            <param name="cancellationToken">
            The <see cref="T:System.Threading.CancellationToken"/> used for requests made while
            enumerating asynchronously.
            </param>
            <returns>An async sequence of values.</returns>
        </member>
        <member name="T:Azure.Storage.StorageExceptionExtensions">
            <summary>
            Provide helpful information about errors calling Azure Storage endpoints.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageExceptionExtensions.GetErrorCode(Azure.Response,System.String)">
            <summary>
            Attempt to get the error code from a response if it's not provided.
            </summary>
            <param name="response">The response.</param>
            <param name="errorCode">An optional error code.</param>
            <returns>The response's error code.</returns>
        </member>
        <member name="M:Azure.Storage.StorageExceptionExtensions.IsUnavailable``1(Azure.Response{``0})">
            <summary>
            Check if a Response will throw an exception if you try to access
            its Value property.
            </summary>
            <typeparam name="T">Type of the Response Value.</typeparam>
            <param name="response">The response to check.</param>
            <returns>True if the response will throw.</returns>
        </member>
        <member name="M:Azure.Storage.StorageExceptionExtensions.AsNoBodyResponse``1(Azure.Response)">
            <summary>
            Create a response that will throw an exception if you try to access
            its Value property.
            </summary>
            <typeparam name="T">Type of the Response Value.</typeparam>
            <param name="rawResponse">The raw response.</param>
            <returns>A response that will throw if accessed.</returns>
        </member>
        <member name="T:Azure.Storage.StorageRequestValidationPipelinePolicy">
            <summary>
            Pipeline policy to verify x-ms-client-request-id and x-ms-client-return-request-id
            headers that are echoed back from a request match.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageRequestValidationPipelinePolicy.#ctor(Azure.Core.ClientOptions)">
            <summary>
            Create a new StorageRequestValidationPipelinePolicy
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageRequestValidationPipelinePolicy.OnReceivedResponse(Azure.Core.HttpMessage)">
            <summary>
            Verify x-ms-client-request-id and x-ms-client-return-request-id headers matches as
            x-ms-client-return-request-id is an echo of x-mis-client-request-id.
            </summary>
            <param name="message">The message that was sent</param>
        </member>
        <member name="T:Azure.Storage.StorageSharedKeyCredentialInternals">
            <summary>
            This class is added to access protected static methods off of the base class
            that should not be exposed directly to customers.
            </summary>
        </member>
        <member name="T:Azure.Storage.StorageSharedKeyPipelinePolicy">
            <summary>
            HttpPipelinePolicy to sign requests using an Azure Storage shared key.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageSharedKeyPipelinePolicy.IncludeXMsDate">
            <summary>
            Whether to always add the x-ms-date header.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageSharedKeyPipelinePolicy._credentials">
            <summary>
            Shared key credentials used to sign requests
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageSharedKeyPipelinePolicy.#ctor(Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Create a new SharedKeyPipelinePolicy
            </summary>
            <param name="credentials">SharedKeyCredentials to authenticate requests.</param>
        </member>
        <member name="M:Azure.Storage.StorageSharedKeyPipelinePolicy.OnSendingRequest(Azure.Core.HttpMessage)">
            <summary>
            Sign the request using the shared key credentials.
            </summary>
            <param name="message">The message with the request to sign.</param>
        </member>
        <member name="P:Azure.Storage.StorageResponseClassifier.SecondaryStorageUri">
            <summary>
            The secondary URI to be used for retries on failed read requests
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageResponseClassifier.IsRetriableResponse(Azure.Core.HttpMessage)">
            <summary>
            Overridden version of IsRetriableResponse that allows for Storage specific retry logic.
            </summary>
            <param name="message">The message containing both Response and Request</param>
            <returns></returns>
        </member>
        <member name="T:Azure.Storage.StorageVersionExtensions">
            <summary>
            Helpers to manage Storage service versions.
            </summary>
        </member>
        <member name="F:Azure.Storage.StorageVersionExtensions.LatestVersion">
            <summary>
            Gets the latest version of the service supported by this SDK.
            </summary>
        </member>
        <member name="M:Azure.Storage.StorageVersionExtensions.ToVersionString(Azure.Storage.Queues.QueueClientOptions.ServiceVersion)">
            <summary>
            Convert a Storage ServiceVersion enum to an x-ms-version string.
            </summary>
            <param name="version">The service version enum value.</param>
            <returns>The x-ms-version string.</returns>
        </member>
        <member name="T:Azure.Storage.UriExtensions">
            <summary>
            Extension methods used to manipulate URIs.
            </summary>
        </member>
        <member name="M:Azure.Storage.UriExtensions.AppendToPath(System.Uri,System.String)">
            <summary>
            Append a segment to a URIs path.
            </summary>
            <param name="uri">The URI.</param>
            <param name="segment">The relative segment to append.</param>
            <returns>The combined URI.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.GetQueryParameters(System.Uri)">
            <summary>
            Get the (already encoded) query parameters on a URI.
            </summary>
            <param name="uri">The URI.</param>
            <returns>Dictionary mapping query parameters to values.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.GetAccountNameFromDomain(System.Uri,System.String)">
            <summary>
            Get the account name from the domain portion of a Uri.
            </summary>
            <param name="uri">The Uri.</param>
            <param name="serviceSubDomain">The service subdomain used to validate that the
            domain is in the expected format. This should be "blob" for blobs, "file" for files,
            "queue" for queues, "blob" and "dfs" for datalake.</param>
            <returns>Account name or null if not able to be parsed.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.GetAccountNameFromDomain(System.String,System.String)">
            <summary>
            Get the account name from the host.
            </summary>
            <param name="host">Host.</param>
            <param name="serviceSubDomain">The service subdomain used to validate that the
            domain is in the expected format. This should be "blob" for blobs, "file" for files,
            "queue" for queues, "blob" and "dfs" for datalake.</param>
            <returns>Account name or null if not able to be parsed.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.GetPath(System.Uri)">
            <summary>
            If path starts with a slash, remove it
            </summary>
            <param name="uri">The Uri.</param>
            <returns>Sanitized Uri.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.IsHostIPEndPointStyle(System.Uri)">
            <summary>
            Check to see if Uri is using IP Endpoint style.
            </summary>
            <param name="uri">The Uri.</param>
            <returns>True if using IP Endpoint style.</returns>
        </member>
        <member name="M:Azure.Storage.UriExtensions.AppendQueryParameter(System.Text.StringBuilder,System.String,System.String)">
            <summary>
            Appends a query parameter to the string builder.
            </summary>
            <param name="sb">string builder instance.</param>
            <param name="key">query parameter key.</param>
            <param name="value">query parameter value.</param>
        </member>
        <member name="M:Azure.Storage.UriQueryParamsCollection.#ctor(System.String)">
            <summary>
            Takes encoded query params string, output decoded params map
            </summary>
            <param name="encodedQueryParamString"></param>
        </member>
        <member name="T:Azure.Core.ArrayBufferWriter`1">
            <summary>
            Represents a heap-based, array-backed output sink into which <typeparam name="T"/> data can be written.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1"/>, in which data can be written to,
            with the default initial capacity.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.#ctor(System.Int32)">
            <summary>
            Creates an instance of an <see cref="T:Azure.Core.ArrayBufferWriter`1"/>, in which data can be written to,
            with an initial capacity specified.
            </summary>
            <param name="initialCapacity">The minimum capacity with which to initialize the underlying buffer.</param>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="initialCapacity"/> is not positive (i.e. less than or equal to 0).
            </exception>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenMemory">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlyMemory`1"/>.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenSpan">
            <summary>
            Returns the data written to the underlying buffer so far, as a <see cref="T:System.ReadOnlySpan`1"/>.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.WrittenCount">
            <summary>
            Returns the amount of data written to the underlying buffer so far.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.Capacity">
            <summary>
            Returns the total amount of space within the underlying buffer.
            </summary>
        </member>
        <member name="P:Azure.Core.ArrayBufferWriter`1.FreeCapacity">
            <summary>
            Returns the amount of space available that can still be written into without forcing the underlying buffer to grow.
            </summary>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Clear">
            <summary>
            Clears the data written to the underlying buffer.
            </summary>
            <remarks>
            You must clear the <see cref="T:Azure.Core.ArrayBufferWriter`1"/> before trying to re-use it.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.Advance(System.Int32)">
            <summary>
            Notifies <see cref="T:System.Buffers.IBufferWriter`1"/> that <paramref name="count"/> amount of data was written to the output <see cref="T:System.Span`1"/>/<see cref="T:System.Memory`1"/>.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="count"/> is negative.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Thrown when attempting to advance past the end of the underlying buffer.
            </exception>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetMemory(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Memory`1"/> to write to that is at least the requested length (specified by <paramref name="sizeHint"/>).
            If no <paramref name="sizeHint"/> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint"/> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Memory`1"/>.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="M:Azure.Core.ArrayBufferWriter`1.GetSpan(System.Int32)">
            <summary>
            Returns a <see cref="T:System.Span`1"/> to write to that is at least the requested length (specified by <paramref name="sizeHint"/>).
            If no <paramref name="sizeHint"/> is provided (or it's equal to <code>0</code>), some non-empty buffer is returned.
            </summary>
            <exception cref="T:System.ArgumentException">
            Thrown when <paramref name="sizeHint"/> is negative.
            </exception>
            <remarks>
            This will never return an empty <see cref="T:System.Span`1"/>.
            </remarks>
            <remarks>
            There is no guarantee that successive calls will return the same buffer or the same-sized buffer.
            </remarks>
            <remarks>
            You must request a new buffer after calling Advance to continue writing more data and cannot write to a previously acquired buffer.
            </remarks>
        </member>
        <member name="T:Azure.Core.AzureResourceProviderNamespaceAttribute">
            <summary>
            This attribute should be set on all client assemblies with value of one of the resource providers
            from the https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/azure-services-resource-providers list.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.ActivityExtensions">
            <summary>
            HACK HACK HACK. Some runtime environments like Azure.Functions downgrade System.Diagnostic.DiagnosticSource package version causing method not found exceptions in customer apps
            This type is a temporary workaround to avoid the issue.
            </summary>
        </member>
        <member name="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1">
            <summary>
            Both <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerable`1"/> and <see cref="T:Azure.Core.Pipeline.TaskExtensions.Enumerator`1"/> are defined as public structs so that foreach can use duck typing
            to call <see cref="M:Azure.Core.Pipeline.TaskExtensions.Enumerable`1.GetEnumerator"/> and avoid heap memory allocation.
            Please don't delete this method and don't make these types private.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Azure.Core.ForwardsClientCallsAttribute">
            <summary>
            Marks methods that call methods on other client and don't need their diagnostics verified
            </summary>
        </member>
        <member name="T:Azure.Core.HashCodeBuilder">
            <summary>
            Copied from https://github.com/dotnet/corefx/blob/master/src/Common/src/CoreLib/System/HashCode.cs.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Azure.QueueClientBuilderExtensions">
            <summary>
            Extension methods to add <see cref="T:Azure.Storage.Queues.QueueClientOptions"/> client to clients builder
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``1(``0,System.String)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Queues.QueueServiceClient"/> instance with the provided <paramref name="connectionString"/>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``1(``0,System.Uri)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Queues.QueueServiceClient"/> instance with the provided <paramref name="serviceUri"/>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``1(``0,System.Uri,Azure.Storage.StorageSharedKeyCredential)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Queues.QueueServiceClient"/> instance with the provided <paramref name="serviceUri"/> and <paramref name="sharedKeyCredential"/>
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Azure.QueueClientBuilderExtensions.AddQueueServiceClient``2(``0,``1)">
            <summary>
            Registers a <see cref="T:Azure.Storage.Queues.QueueServiceClient"/> instance with connection options loaded from the provided <paramref name="configuration"/> instance.
            </summary>
        </member>
    </members>
</doc>
